<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenCvSharp.CPlusPlus</name>
    </assembly>
    <members>
        <member name="T:OpenCvSharp.CPlusPlus.IStdVector">
            <summary>
            Represents std::vector 
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.IStdVector.Size">
            <summary>
            vector.size()
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.IStdVector.ElemPtr">
            <summary>
            &amp;vector[0]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.Flann.KMeansIndexParams">
            <summary>
            When passing an object of this type the index constructed will be a hierarchical k-means tree.
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.Flann.IndexParams">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Flann.IndexParams.SizeOf">
            <summary>
            sizeof(cv::flann::IndexParams)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.IndexParams.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.IndexParams.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.IndexParams.GetString(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="defaultVal"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.IndexParams.GetString(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.IndexParams.GetInt(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="defaultVal"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.IndexParams.GetInt(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.IndexParams.GetDouble(System.String,System.Double)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="defaultVal"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.IndexParams.GetDouble(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.IndexParams.SetString(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.IndexParams.SetInt(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.IndexParams.SetDouble(System.String,System.Double)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.IndexParams.SetFloat(System.String,System.Single)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.IndexParams.SetBool(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.IndexParams.SetAlgorithm(System.Int32)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Flann.KMeansIndexParams.SizeOf">
            <summary>
            sizeof(cv::flann::KMeansIndexParams)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.KMeansIndexParams.#ctor(System.Int32,System.Int32,OpenCvSharp.CPlusPlus.FlannCentersInit,System.Single)">
            <summary>
            
            </summary>
            <param name="branching">The branching factor to use for the hierarchical k-means tree</param>
            <param name="iterations">The maximum number of iterations to use in the k-means clustering stage when building the k-means tree. A value of -1 used here means that the k-means clustering should be iterated until convergence</param>
            <param name="centers_init">The algorithm to use for selecting the initial centers when performing a k-means clustering step. </param>
            <param name="cb_index">This parameter (cluster boundary index) influences the way exploration is performed in the hierarchical kmeans tree. When cb_index is zero the next kmeans domain to be explored is choosen to be the one with the closest center. A value greater then zero also takes into account the size of the domain.</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.KMeansIndexParams.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.StereoSGBM">
            <summary>
            Semi-Global Stereo Matching
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.StereoSGBM.SizeOf">
            <summary>
            sizeof(StereoSGBM)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.StereoSGBM._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StereoSGBM.#cctor">
            <summary>
            static constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StereoSGBM.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StereoSGBM.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            StereoSGBM Constructor
            </summary>
            <param name="minDisparity"></param>
            <param name="numDisparities"></param>
            <param name="SADWindowSize"></param>
            <param name="P1"></param>
            <param name="P2"></param>
            <param name="disp12MaxDiff"></param>
            <param name="preFilterCap"></param>
            <param name="uniquenessRatio"></param>
            <param name="speckleWindowSize"></param>
            <param name="speckleRange"></param>
            <param name="fullDP"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StereoSGBM.Release">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StereoSGBM.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StereoSGBM.FindCorrespondence(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="disp"></param>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StereoSGBM.MinDisparity">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StereoSGBM.NumberOfDisparities">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StereoSGBM.SADWindowSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StereoSGBM.PreFilterCap">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StereoSGBM.UniquenessRatio">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StereoSGBM.P1">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StereoSGBM.P2">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StereoSGBM.SpeckleWindowSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StereoSGBM.SpeckleRange">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StereoSGBM.Disp12MaxDiff">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StereoSGBM.FullDP">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.Mat">
            <summary>
            OpenCV C++ matrix class.
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Mat.MAGIC_VAL">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Mat.AUTO_STEP">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Mat.CONTINUOUS_FLAG">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Mat.SizeOf">
            <summary>
            sizeof(Mat)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Mat._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#cctor">
            <summary>
            static constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(System.String,OpenCvSharp.LoadMode)">
            <summary>
            Loads image from the specified file name using cv::imread
            </summary>
            <param name="filename"></param>
            <param name="flags"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(System.Int32,System.Int32,OpenCvSharp.MatrixType)">
            <summary>
            
            </summary>
            <param name="rows"></param>
            <param name="cols"></param>
            <param name="type"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(OpenCvSharp.CvSize,OpenCvSharp.MatrixType)">
            <summary>
            
            </summary>
            <param name="size"></param>
            <param name="type"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(System.Int32,System.Int32,OpenCvSharp.MatrixType,OpenCvSharp.CvScalar)">
            <summary>
            
            </summary>
            <param name="rows"></param>
            <param name="cols"></param>
            <param name="type"></param>
            <param name="s"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(OpenCvSharp.CvSize,OpenCvSharp.MatrixType,OpenCvSharp.CvScalar)">
            <summary>
            
            </summary>
            <param name="size"></param>
            <param name="type"></param>
            <param name="s"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(System.Int32,System.Int32,OpenCvSharp.MatrixType,System.IntPtr,System.UInt32)">
            <summary>
            
            </summary>
            <param name="rows"></param>
            <param name="cols"></param>
            <param name="type"></param>
            <param name="data"></param>
            <param name="step"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(OpenCvSharp.CvSize,OpenCvSharp.MatrixType,System.IntPtr,System.UInt32)">
            <summary>
            
            </summary>
            <param name="size"></param>
            <param name="type"></param>
            <param name="data"></param>
            <param name="step"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvSlice,OpenCvSharp.CvSlice)">
            <summary>
            
            </summary>
            <param name="m"></param>
            <param name="rowRange"></param>
            <param name="colRange"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvRect)">
            <summary>
            
            </summary>
            <param name="m"></param>
            <param name="roi"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(OpenCvSharp.CvMat)">
            <summary>
            
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(OpenCvSharp.CvMat,System.Boolean)">
            <summary>
            
            </summary>
            <param name="m"></param>
            <param name="copyData"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(OpenCvSharp.IplImage)">
            <summary>
            
            </summary>
            <param name="img"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(OpenCvSharp.IplImage,System.Boolean)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="copyData"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(System.Array,OpenCvSharp.BitDepth,System.Boolean)">
            <summary>
            
            </summary>
            <param name="vec"></param>
            <param name="depth"></param>
            <param name="copyData"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="ptr"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Release">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.op_UnaryNegation(OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            
            </summary>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.op_Addition(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            
            </summary>
            <param name="src1"></param>
            <param name="src2"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.op_Addition(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvScalar)">
            <summary>
            
            </summary>
            <param name="src1"></param>
            <param name="src2"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.op_Subtraction(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            
            </summary>
            <param name="src1"></param>
            <param name="src2"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.op_Subtraction(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvScalar)">
            <summary>
            
            </summary>
            <param name="src1"></param>
            <param name="src2"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.op_Multiply(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            
            </summary>
            <param name="src1"></param>
            <param name="src2"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.op_Division(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            
            </summary>
            <param name="src1"></param>
            <param name="src2"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.op_Explicit(OpenCvSharp.CPlusPlus.Mat)~OpenCvSharp.CvMat">
            <summary>
            converts header to CvMat; no data is copied
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.op_Explicit(OpenCvSharp.CPlusPlus.Mat)~OpenCvSharp.IplImage">
            <summary>
            converts header to IplImage; no data is copied
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Diag(OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            constructs a square diagonal matrix which main diagonal is vector "d"
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Zeros(System.Int32,System.Int32,OpenCvSharp.MatrixType)">
            <summary>
            Matlab-style matrix initialization
            </summary>
            <param name="rows"></param>
            <param name="cols"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Zeros(OpenCvSharp.CvSize,OpenCvSharp.MatrixType)">
            <summary>
            Matlab-style matrix initialization
            </summary>
            <param name="size"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Ones(System.Int32,System.Int32,OpenCvSharp.MatrixType)">
            <summary>
            Matlab-style matrix initialization
            </summary>
            <param name="rows"></param>
            <param name="cols"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Ones(OpenCvSharp.CvSize,OpenCvSharp.MatrixType)">
            <summary>
            Matlab-style matrix initialization
            </summary>
            <param name="size"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Eye(System.Int32,System.Int32,OpenCvSharp.MatrixType)">
            <summary>
            Matlab-style matrix initialization
            </summary>
            <param name="rows"></param>
            <param name="cols"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Eye(OpenCvSharp.CvSize,OpenCvSharp.MatrixType)">
            <summary>
            Matlab-style matrix initialization
            </summary>
            <param name="size"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Row(System.Int32)">
            <summary>
            returns a new matrix header for the specified row
            </summary>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Col(System.Int32)">
            <summary>
            returns a new matrix header for the specified column
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.RowRange(System.Int32,System.Int32)">
            <summary>
            returns a new matrix header for the specified row span
            </summary>
            <param name="startrow"></param>
            <param name="endrow"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.RowRange(OpenCvSharp.CvSlice)">
            <summary>
            returns a new matrix header for the specified row span
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.ColRange(System.Int32,System.Int32)">
            <summary>
            returns a new matrix header for the specified column span
            </summary>
            <param name="startcol"></param>
            <param name="endcol"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.ColRange(OpenCvSharp.CvSlice)">
            <summary>
            returns a new matrix header for the specified column span
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Diag">
            <summary>
            returns a new matrix header for the specified diagonal
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Diag(OpenCvSharp.CPlusPlus.MatDiagType)">
            <summary>
            returns a new matrix header for the specified diagonal
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Clone">
            <summary>
            returns deep copy of the matrix, i.e. the data is copied
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.CopyTo(OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            copies those matrix elements to "m"
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.CopyTo(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            copies those matrix elements to "m" that are marked with non-zero mask elements.
            </summary>
            <param name="m"></param>
            <param name="mask"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.ConvertTo(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.MatrixType,System.Double,System.Double)">
            <summary>
            converts matrix to another datatype with optional scalng. See cvConvertScale.
            </summary>
            <param name="dst"></param>
            <param name="rtype"></param>
            <param name="alpha"></param>
            <param name="beta"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.AssignTo(OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.AssignTo(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.MatrixType)">
            <summary>
            
            </summary>
            <param name="m"></param>
            <param name="type"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.SetTo(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            sets some of the matrix elements to s, according to the mask
            </summary>
            <param name="value"></param>
            <param name="mask"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Reshape(System.Int32,System.Int32)">
            <summary>
            creates alternative matrix header for the same data, with different
            number of channels and/or different number of rows. see cvReshape.
            </summary>
            <param name="cn"></param>
            <param name="rows"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Cross(OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            computes cross-product of 2 3D vectors
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Dot(OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            computes dot-product
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Create(System.Int32,System.Int32,OpenCvSharp.MatrixType)">
            <summary>
            allocates new matrix data unless the matrix already has specified size and type.
            previous data is unreferenced if needed.
            </summary>
            <param name="rows"></param>
            <param name="cols"></param>
            <param name="type"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Create(OpenCvSharp.CvSize,OpenCvSharp.MatrixType)">
            <summary>
            allocates new matrix data unless the matrix already has specified size and type.
            previous data is unreferenced if needed.
            </summary>
            <param name="size"></param>
            <param name="type"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.LocateROI(OpenCvSharp.CvSize@,OpenCvSharp.CvPoint@)">
            <summary>
            locates matrix header within a parent matrix.
            </summary>
            <param name="wholeSize"></param>
            <param name="ofs"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.AdjustROI(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            moves/resizes the current matrix ROI inside the parent matrix.
            </summary>
            <param name="dtop"></param>
            <param name="dbottom"></param>
            <param name="dleft"></param>
            <param name="dright"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.T">
            <summary>
            matrix transposition by means of matrix expressions
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Inv(OpenCvSharp.InvertMethod)">
            <summary>
            matrix inversion by means of matrix expressions
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.ToCvMat">
            <summary>
            converts header to CvMat; no data is copied
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.ToIplImage">
            <summary>
            converts header to IplImage; no data is copied
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.IsContinuous">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.At``1(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="y"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.At``1(OpenCvSharp.CvPoint)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Get``1(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="y"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Set``1(System.Int32,System.Int32,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="y"></param>
            <param name="x"></param>
            <param name="value"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Ptr(System.Int32)">
            <summary>
            
            </summary>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.ToBitmap">
            <summary>
            Converts Mat to System.Drawing.Bitmap
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.ToBitmap(System.Drawing.Imaging.PixelFormat)">
            <summary>
            Converts Mat to System.Drawing.Bitmap
            </summary>
            <param name="pf">Pixel Depth</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.ToBitmap(System.Drawing.Bitmap)">
            <summary>
            Converts Mat to System.Drawing.Bitmap
            </summary>
            <param name="dst">Bitmap</param>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Flags">
            <summary>
            includes several bit-fields: 
             1.the magic signature 
             2.continuity flag 
             3.depth 
             4.number of channels
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Rows">
            <summary>
            the number of rows
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Cols">
            <summary>
            the number of columns
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Step">
            <summary>
            a distance between successive rows in bytes; includes the gap if any
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Data">
            <summary>
            pointer to the data
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.RefCount">
            <summary>
            pointer to the reference counter;
            when matrix points to user-allocated data, the pointer is NULL
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.DataStart">
            <summary>
            helper fields used in locateROI and adjustROI
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.DataEnd">
            <summary>
            helper fields used in locateROI and adjustROI
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.ElemSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.ElemSize1">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Depth">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Channels">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Bpp">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Item(OpenCvSharp.CvRect)">
            <summary>
            
            </summary>
            <param name="roi"></param>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Item(OpenCvSharp.CvSlice,OpenCvSharp.CvSlice)">
            <summary>
            
            </summary>
            <param name="rowRange"></param>
            <param name="colRange"></param>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Item(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="y"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.StdVectorFloat">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.StdVectorFloat._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorFloat.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorFloat.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorFloat.#ctor(System.Single[])">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorFloat.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorFloat.ToArray">
            <summary>
            Converts std::vector to managed array
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorFloat.Size">
            <summary>
            vector.size()
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorFloat.ElemPtr">
            <summary>
            &amp;vector[0]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.Flann.SearchParams">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Flann.SearchParams.SizeOf">
            <summary>
            sizeof(cv::flann::SearchParams)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.SearchParams.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.SearchParams.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="checks"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.SearchParams.#ctor(System.Int32,System.Single)">
            <summary>
            
            </summary>
            <param name="checks"></param>
            <param name="eps"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.SearchParams.#ctor(System.Int32,System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="checks"></param>
            <param name="eps"></param>
            <param name="sorted"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.SearchParams.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.BackgroundSubtractor">
            <summary>
            The Base Class for Background/Foreground Segmentation.
            The class is only used to define the common interface for
            the whole family of background/foreground segmentation algorithms.
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.BackgroundSubtractor.SizeOf">
            <summary>
            sizeof(BackgroundSubtractor)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.BackgroundSubtractor._disposed">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.BackgroundSubtractor.#cctor">
            <summary>
            static constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.BackgroundSubtractor.Run(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,System.Double)">
            <summary>
            the update operator that takes the next video frame and returns the current foreground mask as 8-bit binary image.
            </summary>
            <param name="image"></param>
            <param name="fgmask"></param>
            <param name="learningRate"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.BackgroundSubtractor.GetBackgroundImage(OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            computes a background image
            </summary>
            <param name="backgroundImage"></param>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.BackgroundSubtractorMOG">
            <summary>
            The Base Class for Background/Foreground Segmentation.
            The class is only used to define the common interface for
            the whole family of background/foreground segmentation algorithms.
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.BackgroundSubtractorMOG.SizeOf">
            <summary>
            sizeof(BackgroundSubtractorMOG)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.BackgroundSubtractorMOG.#cctor">
            <summary>
            static constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.BackgroundSubtractorMOG.#ctor">
            <summary>
            the default constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.BackgroundSubtractorMOG.#ctor(System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            the full constructor that takes the length of the history, the number of gaussian mixtures, the background ratio parameter and the noise strength
            </summary>
            <param name="history"></param>
            <param name="nmixtures"></param>
            <param name="backgroundRatio"></param>
            <param name="noiseSigma"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.BackgroundSubtractorMOG.Release">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.BackgroundSubtractorMOG.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.BackgroundSubtractorMOG.Run(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,System.Double)">
            <summary>
            the update operator
            </summary>
            <param name="image"></param>
            <param name="fgmask"></param>
            <param name="learningRate"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.BackgroundSubtractorMOG.Initialize(OpenCvSharp.CvSize,System.Int32)">
            <summary>
            re-initiaization method
            </summary>
            <param name="frameSize"></param>
            <param name="frameType"></param>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.BackgroundSubtractorMOG2">
            <summary>
            The Base Class for Background/Foreground Segmentation.
            The class is only used to define the common interface for
            the whole family of background/foreground segmentation algorithms.
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.BackgroundSubtractorMOG2.SizeOf">
            <summary>
            sizeof(BackgroundSubtractorMOG2)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.BackgroundSubtractorMOG2.#cctor">
            <summary>
            static constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.BackgroundSubtractorMOG2.#ctor">
            <summary>
            the default constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.BackgroundSubtractorMOG2.#ctor(System.Int32,System.Single,System.Boolean)">
            <summary>
            the full constructor that takes the length of the history, the number of gaussian mixtures, the background ratio parameter and the noise strength
            </summary>
            <param name="history"></param>
            <param name="varThreshold"></param>
            <param name="bShadowDetection"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.BackgroundSubtractorMOG2.Release">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.BackgroundSubtractorMOG2.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.BackgroundSubtractorMOG2.Run(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,System.Double)">
            <summary>
            the update operator
            </summary>
            <param name="image"></param>
            <param name="fgmask"></param>
            <param name="learningRate"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.BackgroundSubtractorMOG2.GetBackgroundImage(OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            computes a background image
            </summary>
            <param name="backgroundImage"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.BackgroundSubtractorMOG2.Initialize(OpenCvSharp.CvSize,System.Int32)">
            <summary>
            re-initiaization method
            </summary>
            <param name="frameSize"></param>
            <param name="frameType"></param>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.Flann.FlannInvoke">
            <summary>
            P/Invoke methods of OpenCV FLANN interface
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Flann.FlannInvoke.DllExtern">
            <summary>
            DLL file name
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.FlannInvoke.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.FlannInvoke.TryPInvoke">
            <summary>
            Checks whether PInvoke functions can be called
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.FlannCentersInit">
            <summary>
            The algorithm to use for selecting the initial centers when performing a k-means clustering step. 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.FlannCentersInit.Random">
            <summary>
            picks the initial cluster centers randomly
            [flann_centers_init_t::CENTERS_RANDOM]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.FlannCentersInit.Gonzales">
            <summary>
            picks the initial centers using Gonzales’ algorithm
            [flann_centers_init_t::CENTERS_GONZALES]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.FlannCentersInit.KMeansPP">
            <summary>
            picks the initial centers using the algorithm suggested in [arthur_kmeanspp_2007]
            [flann_centers_init_t::CENTERS_KMEANSPP]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.HOGDescriptor">
            <summary>
            HOG (Histogram-of-Oriented-Gradients) Descriptor and Object Detector
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.HOGDescriptor.L2Hys">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.HOGDescriptor.DEFAULT_NLEVELS">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.HOGDescriptor.SizeOf">
            <summary>
            sizeof(HOGDescriptor) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.HOGDescriptor.DefaultPeopleDetector">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.HOGDescriptor._svmDetector">
            <summary>
            setSVMDetector parameter vector
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.HOGDescriptor._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.#ctor(OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,System.Int32)">
            <summary>
            
            </summary>
            <param name="winSize"></param>
            <param name="blockSize"></param>
            <param name="blockStride"></param>
            <param name="cellSize"></param>
            <param name="nbins"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.#ctor(OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="winSize"></param>
            <param name="blockSize"></param>
            <param name="blockStride"></param>
            <param name="cellSize"></param>
            <param name="nbins"></param>
            <param name="derivAperture"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.#ctor(OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,System.Int32,System.Int32,System.Double)">
            <summary>
            
            </summary>
            <param name="winSize"></param>
            <param name="blockSize"></param>
            <param name="blockStride"></param>
            <param name="cellSize"></param>
            <param name="nbins"></param>
            <param name="derivAperture"></param>
            <param name="winSigma"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.#ctor(OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,System.Int32,System.Int32,System.Double,OpenCvSharp.CPlusPlus.HistogramNormType)">
            <summary>
            
            </summary>
            <param name="winSize"></param>
            <param name="blockSize"></param>
            <param name="blockStride"></param>
            <param name="cellSize"></param>
            <param name="nbins"></param>
            <param name="derivAperture"></param>
            <param name="winSigma"></param>
            <param name="histogramNormType"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.#ctor(OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,System.Int32,System.Int32,System.Double,OpenCvSharp.CPlusPlus.HistogramNormType,System.Double)">
            <summary>
            
            </summary>
            <param name="winSize"></param>
            <param name="blockSize"></param>
            <param name="blockStride"></param>
            <param name="cellSize"></param>
            <param name="nbins"></param>
            <param name="derivAperture"></param>
            <param name="winSigma"></param>
            <param name="histogramNormType"></param>
            <param name="L2HysThreshold"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.#ctor(OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,System.Int32,System.Int32,System.Double,OpenCvSharp.CPlusPlus.HistogramNormType,System.Double,System.Boolean)">
            <summary>
            
            </summary>
            <param name="winSize"></param>
            <param name="blockSize"></param>
            <param name="blockStride"></param>
            <param name="cellSize"></param>
            <param name="nbins"></param>
            <param name="derivAperture"></param>
            <param name="winSigma"></param>
            <param name="histogramNormType"></param>
            <param name="L2HysThreshold"></param>
            <param name="gammaCorrection"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.#ctor(OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,System.Int32,System.Int32,System.Double,OpenCvSharp.CPlusPlus.HistogramNormType,System.Double,System.Boolean,System.Int32)">
            <summary>
            
            </summary>
            <param name="winSize"></param>
            <param name="blockSize"></param>
            <param name="blockStride"></param>
            <param name="cellSize"></param>
            <param name="nbins"></param>
            <param name="derivAperture"></param>
            <param name="winSigma"></param>
            <param name="histogramNormType"></param>
            <param name="L2HysThreshold"></param>
            <param name="gammaCorrection"></param>
            <param name="nlevels"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.#ctor(System.IntPtr)">
            <summary>
            Initializes from pointer
            </summary>
            <param name="ptr">class HOGDescriptor*</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.GetDefaultPeopleDetector">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.SetSVMDetector(System.Single[])">
            <summary>
            
            </summary>
            <param name="svmdetector"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Load(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Load(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
            <param name="objname"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Save(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Save(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
            <param name="objname"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.GetDescriptorSize">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.CheckDetectorSize">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.GetWinSigma">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Compute(OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Compute(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvSize)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="winStride"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Compute(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvSize,OpenCvSharp.CvSize)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="winStride"></param>
            <param name="padding"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Compute(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvPoint[])">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="winStride"></param>
            <param name="padding"></param>
            <param name="locations"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Detect(OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Detect(OpenCvSharp.CPlusPlus.Mat,System.Double)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="hitThreshold"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Detect(OpenCvSharp.CPlusPlus.Mat,System.Double,OpenCvSharp.CvSize)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="hitThreshold"></param>
            <param name="winStride"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Detect(OpenCvSharp.CPlusPlus.Mat,System.Double,OpenCvSharp.CvSize,OpenCvSharp.CvSize)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="hitThreshold"></param>
            <param name="winStride"></param>
            <param name="padding"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Detect(OpenCvSharp.CPlusPlus.Mat,System.Double,OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvPoint[])">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="hitThreshold"></param>
            <param name="winStride"></param>
            <param name="padding"></param>
            <param name="searchLocations"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.DetectMultiScale(OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.DetectMultiScale(OpenCvSharp.CPlusPlus.Mat,System.Double)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="hitThreshold"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.DetectMultiScale(OpenCvSharp.CPlusPlus.Mat,System.Double,OpenCvSharp.CvSize)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="hitThreshold"></param>
            <param name="winStride"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.DetectMultiScale(OpenCvSharp.CPlusPlus.Mat,System.Double,OpenCvSharp.CvSize,OpenCvSharp.CvSize)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="hitThreshold"></param>
            <param name="winStride"></param>
            <param name="padding"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.DetectMultiScale(OpenCvSharp.CPlusPlus.Mat,System.Double,OpenCvSharp.CvSize,OpenCvSharp.CvSize,System.Double)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="hitThreshold"></param>
            <param name="winStride"></param>
            <param name="padding"></param>
            <param name="scale"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.DetectMultiScale(OpenCvSharp.CPlusPlus.Mat,System.Double,OpenCvSharp.CvSize,OpenCvSharp.CvSize,System.Double,System.Int32)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="hitThreshold"></param>
            <param name="winStride"></param>
            <param name="padding"></param>
            <param name="scale"></param>
            <param name="groupThreshold"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.ComputeGradient(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="grad"></param>
            <param name="angleOfs"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.ComputeGradient(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvSize)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="grad"></param>
            <param name="angleOfs"></param>
            <param name="paddingTL"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.ComputeGradient(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvSize,OpenCvSharp.CvSize)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="grad"></param>
            <param name="angleOfs"></param>
            <param name="paddingTL"></param>
            <param name="paddingBR"></param>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.HOGDescriptor.WinSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.HOGDescriptor.BlockSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.HOGDescriptor.BlockStride">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.HOGDescriptor.CellSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.HOGDescriptor.Nbins">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.HOGDescriptor.DerivAperture">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.HOGDescriptor.WinSigma">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.HOGDescriptor.HistogramNormType">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.HOGDescriptor.L2HysThreshold">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.HOGDescriptor.GammaCorrection">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.HOGDescriptor.NLevels">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.MSER">
            <summary>
            Maximally-Stable Extremal Region Extractor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.#ctor">
            <summary>
            Creates MSER parameters
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.#ctor(System.Int32)">
            <summary>
            Creates MSER parameters
            </summary>
            <param name="delta">delta, in the code, it compares (size_{i}-size_{i-delta})/size_{i-delta}</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates MSER parameters
            </summary>
            <param name="delta">delta, in the code, it compares (size_{i}-size_{i-delta})/size_{i-delta}</param>
            <param name="min_area">prune the area which smaller than min_area</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates MSER parameters
            </summary>
            <param name="delta">delta, in the code, it compares (size_{i}-size_{i-delta})/size_{i-delta}</param>
            <param name="min_area">prune the area which smaller than min_area</param>
            <param name="max_area">prune the area which bigger than max_area</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.#ctor(System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            Creates MSER parameters
            </summary>
            <param name="delta">delta, in the code, it compares (size_{i}-size_{i-delta})/size_{i-delta}</param>
            <param name="min_area">prune the area which smaller than min_area</param>
            <param name="max_area">prune the area which bigger than max_area</param>
            <param name="max_variation">prune the area have simliar size to its children</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.#ctor(System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates MSER parameters
            </summary>
            <param name="delta">delta, in the code, it compares (size_{i}-size_{i-delta})/size_{i-delta}</param>
            <param name="min_area">prune the area which smaller than min_area</param>
            <param name="max_area">prune the area which bigger than max_area</param>
            <param name="max_variation">prune the area have simliar size to its children</param>
            <param name="min_diversity">trace back to cut off mser with diversity &lt; min_diversity</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.#ctor(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Int32)">
            <summary>
            Creates MSER parameters
            </summary>
            <param name="delta">delta, in the code, it compares (size_{i}-size_{i-delta})/size_{i-delta}</param>
            <param name="min_area">prune the area which smaller than min_area</param>
            <param name="max_area">prune the area which bigger than max_area</param>
            <param name="max_variation">prune the area have simliar size to its children</param>
            <param name="min_diversity">trace back to cut off mser with diversity &lt; min_diversity</param>
            <param name="max_evolution">for color image, the evolution steps</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.#ctor(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Int32,System.Double)">
            <summary>
            Creates MSER parameters
            </summary>
            <param name="delta">delta, in the code, it compares (size_{i}-size_{i-delta})/size_{i-delta}</param>
            <param name="min_area">prune the area which smaller than min_area</param>
            <param name="max_area">prune the area which bigger than max_area</param>
            <param name="max_variation">prune the area have simliar size to its children</param>
            <param name="min_diversity">trace back to cut off mser with diversity &lt; min_diversity</param>
            <param name="max_evolution">for color image, the evolution steps</param>
            <param name="area_threshold">the area threshold to cause re-initialize</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.#ctor(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Int32,System.Double,System.Double)">
            <summary>
            Creates MSER parameters
            </summary>
            <param name="delta">delta, in the code, it compares (size_{i}-size_{i-delta})/size_{i-delta}</param>
            <param name="min_area">prune the area which smaller than min_area</param>
            <param name="max_area">prune the area which bigger than max_area</param>
            <param name="max_variation">prune the area have simliar size to its children</param>
            <param name="min_diversity">trace back to cut off mser with diversity &lt; min_diversity</param>
            <param name="max_evolution">for color image, the evolution steps</param>
            <param name="area_threshold">the area threshold to cause re-initialize</param>
            <param name="min_margin">ignore too small margin</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.#ctor(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Int32,System.Double,System.Double,System.Int32)">
            <summary>
            Creates MSER parameters
            </summary>
            <param name="delta">delta, in the code, it compares (size_{i}-size_{i-delta})/size_{i-delta}</param>
            <param name="min_area">prune the area which smaller than min_area</param>
            <param name="max_area">prune the area which bigger than max_area</param>
            <param name="max_variation">prune the area have simliar size to its children</param>
            <param name="min_diversity">trace back to cut off mser with diversity &lt; min_diversity</param>
            <param name="max_evolution">for color image, the evolution steps</param>
            <param name="area_threshold">the area threshold to cause re-initialize</param>
            <param name="min_margin">ignore too small margin</param>
            <param name="edge_blur_size">the aperture size for edge blur</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.Extract(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Extracts the contours of Maximally Stable Extremal Regions
            </summary>
            <param name="image"></param>
            <param name="mask"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.CvCamShiftTracker">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.CvCamShiftTracker.SizeOf">
            <summary>
            sizeof(CvCamShiftTracker) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.CvCamShiftTracker._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.GetOrientation">
            <summary>
            orientation of the object in degrees
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.GetLength">
            <summary>
            the larger linear size of the object
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.GetWidth">
            <summary>
            the smaller linear size of the object
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.GetCenter">
            <summary>
            center of the object
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.GetWindow">
            <summary>
            bounding rectangle for the object
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.GetThreshold">
            <summary>
            thresholding value that applied to back project
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.GetHistDims(System.Int32[])">
            <summary>
            returns number of histogram dimensions and sets
            </summary>
            <param name="dims"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.GetMinChVal(System.Int32)">
            <summary>
            get the minimum allowed value of the specified channel
            </summary>
            <param name="channel"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.GetMaxChVal(System.Int32)">
            <summary>
            get the maximum allowed value of the specified channel
            </summary>
            <param name="channel"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.SetWindow(OpenCvSharp.CvRect)">
            <summary>
            set initial object rectangle (must be called before initial calculation of the histogram)
            </summary>
            <param name="window"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.SetThreshold(System.Int32)">
            <summary>
            threshold applied to the histogram bins
            </summary>
            <param name="threshold"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.SetHistBinRange(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="dim"></param>
            <param name="min_val"></param>
            <param name="max_val"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.SetHistDims(System.Int32,System.Int32[])">
            <summary>
            set the histogram parameters
            </summary>
            <param name="c_dims"></param>
            <param name="dims"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.SetMinChVal(System.Int32,System.Int32)">
            <summary>
            set the minimum allowed value of the specified channel
            </summary>
            <param name="channel"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.SetMaxChVal(System.Int32,System.Int32)">
            <summary>
            set the maximum allowed value of the specified channel
            </summary>
            <param name="channel"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.TrackObject(OpenCvSharp.IplImage)">
            <summary>
            update object position
            </summary>
            <param name="cur_frame"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.UpdateHistogram(OpenCvSharp.IplImage)">
            <summary>
            update object histogram
            </summary>
            <param name="cur_frame"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.ResetHistogram">
            <summary>
            reset histogram
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.GetBackProject">
            <summary>
            get back project image
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.Query(System.Int32[])">
            <summary>
            
            </summary>
            <param name="bin"></param>
            <returns></returns>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.Vec4iElem">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Vec4iElem.V1">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Vec4iElem.V2">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Vec4iElem.V3">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Vec4iElem.V4">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.StdVectorVec4i">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.StdVectorVec4i._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorVec4i.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorVec4i.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorVec4i.#ctor(OpenCvSharp.CPlusPlus.Vec4iElem[])">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorVec4i.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorVec4i.ToArray">
            <summary>
            Converts std::vector to managed array
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorVec4i.ToArray``1">
            <summary>
            Converts std::vector to managed array
            </summary>
            <typeparam name="T">structure that has four int members (ex. CvLineSegmentPoint, CvRect)</typeparam>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorVec4i.Size">
            <summary>
            vector.size()
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorVec4i.ElemPtr">
            <summary>
            &amp;vector[0]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.MatND">
            <summary>
            n-dimensional dense array
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.MatND.MAGIC_VAL">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.MatND.AUTO_STEP">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.MatND.CONTINUOUS_FLAG">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.MatND.SizeOf">
            <summary>
            sizeof(MatND)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.MatND._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MatND.#cctor">
            <summary>
            static constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MatND.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MatND.Release">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MatND.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MatND.op_Explicit(OpenCvSharp.CPlusPlus.MatND)~OpenCvSharp.CPlusPlus.Mat">
            <summary>
            converts header to cv::Mat; no data is copied
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MatND.op_Explicit(OpenCvSharp.CPlusPlus.MatND)~OpenCvSharp.CvMatND">
            <summary>
            converts header to CvMatND; no data is copied
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MatND.Clone">
            <summary>
            creates a complete copy of the matrix (all the data is copied)
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MatND.CopyTo(OpenCvSharp.CPlusPlus.MatND)">
            <summary>
            copies those matrix elements to "m" 
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MatND.CopyTo(OpenCvSharp.CPlusPlus.MatND,OpenCvSharp.CPlusPlus.MatND)">
            <summary>
            copies those matrix elements to "m" that are marked with non-zero mask elements.
            </summary>
            <param name="m"></param>
            <param name="mask"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MatND.ConvertTo(OpenCvSharp.CPlusPlus.MatND,OpenCvSharp.MatrixType,System.Double,System.Double)">
            <summary>
            converts data to the specified data type.
            calls m.create(this->size(), rtype) prior to the conversion
            </summary>
            <param name="dst"></param>
            <param name="rtype"></param>
            <param name="alpha"></param>
            <param name="beta"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MatND.SetTo(OpenCvSharp.CvScalar,OpenCvSharp.CPlusPlus.MatND)">
            <summary>
            assigns "s" to the selected elements of array
            (or to all the elements if mask==MatND())
            </summary>
            <param name="s"></param>
            <param name="mask"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MatND.Reshape(System.Int32,System.Int32,System.Int32[])">
            <summary>
            modifies geometry of array without copying the data
            </summary>
            <param name="newcn"></param>
            <param name="newndims"></param>
            <param name="newsz"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MatND.ToMat">
            <summary>
            converts header to cv::Mat; no data is copied
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MatND.ToCvMatND">
            <summary>
            converts header to CvMatND; no data is copied
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MatND.IsContinuous">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MatND.Ptr(System.Int32)">
            <summary>
            return pointer to the element 
            </summary>
            <param name="i0"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MatND.Ptr(System.Int32,System.Int32)">
            <summary>
            return pointer to the element 
            </summary>
            <param name="i0"></param>
            <param name="i1"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MatND.Ptr(System.Int32,System.Int32,System.Int32)">
            <summary>
            return pointer to the element 
            </summary>
            <param name="i0"></param>
            <param name="i1"></param>
            <param name="i2"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MatND.Ptr(System.Int32[])">
            <summary>
            return pointer to the element 
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.MatND.Flags">
            <summary>
            includes several bit-fields: 
             1.the magic signature 
             2.continuity flag 
             3.depth 
             4.number of channels
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.MatND.Dims">
            <summary>
            the array dimensionality
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.MatND.Data">
            <summary>
            pointer to the data
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.MatND.RefCount">
            <summary>
            pointer to the reference counter;
            when matrix points to user-allocated data, the pointer is NULL
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.MatND.DataStart">
            <summary>
            helper fields used in locateROI and adjustROI
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.MatND.DataEnd">
            <summary>
            helper fields used in locateROI and adjustROI
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.MatND.Size">
            <summary>
            size for each dimension, MAX_DIM at max
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.MatND.Step">
            <summary>
            step for each dimension, MAX_DIM at max
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.MatND.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.MatND.ElemSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.MatND.ElemSize1">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.MatND.Depth">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.MatND.Channels">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.MatND.Item(OpenCvSharp.CvSlice[])">
            <summary>
            sub-array selection; only the header is copied
            </summary>
            <param name="ranges"></param>
            <returns></returns>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.Vec2fElem">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Vec2fElem.V1">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Vec2fElem.V2">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.StdVectorVec2f">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.StdVectorVec2f._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorVec2f.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorVec2f.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorVec2f.#ctor(OpenCvSharp.CPlusPlus.Vec2fElem[])">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorVec2f.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorVec2f.ToArray">
            <summary>
            Converts std::vector to managed array
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorVec2f.ToArray``1">
            <summary>
            Converts std::vector to managed array
            </summary>
            <typeparam name="T">structure that has two float members (ex. CvLineSegmentPolar, CvPoint2D32f, PointF)</typeparam>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorVec2f.Size">
            <summary>
            vector.size()
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorVec2f.ElemPtr">
            <summary>
            &amp;vector[0]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.Vec3fElem">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Vec3fElem.V1">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Vec3fElem.V2">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Vec3fElem.V3">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.StdVectorVec3f">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.StdVectorVec3f._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorVec3f.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorVec3f.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorVec3f.#ctor(OpenCvSharp.CPlusPlus.Vec3fElem[])">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorVec3f.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorVec3f.ToArray">
            <summary>
            Converts std::vector to managed array
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorVec3f.ToArray``1">
            <summary>
            Converts std::vector to managed array
            </summary>
            <typeparam name="T">structure that has two float members (ex. CvLineSegmentPolar, CvPoint2D32f, PointF)</typeparam>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorVec3f.Size">
            <summary>
            vector.size()
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorVec3f.ElemPtr">
            <summary>
            &amp;vector[0]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.StdVectorKeyPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.StdVectorKeyPoint._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorKeyPoint.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorKeyPoint.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorKeyPoint.#ctor(OpenCvSharp.CPlusPlus.KeyPoint[])">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorKeyPoint.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorKeyPoint.ToArray">
            <summary>
            Converts std::vector to managed array
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorKeyPoint.Size">
            <summary>
            vector.size()
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorKeyPoint.ElemPtr">
            <summary>
            &amp;vector[0]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.Flann.SavedIndexParams">
            <summary>
            This object type is used for loading a previously saved index from the disk.
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Flann.SavedIndexParams.SizeOf">
            <summary>
            sizeof(cv::flann::SavedIndexParams)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.SavedIndexParams.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="filename">インデックスが保存されたファイル名</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.SavedIndexParams.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.Flann.AutotunedIndexParams">
            <summary>
            When passing an object of this type the index constructed will be a hierarchical k-means tree.
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Flann.AutotunedIndexParams.SizeOf">
            <summary>
            sizeof(cv::flann::AutotunedIndexParams)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.AutotunedIndexParams.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="target_precision">Is a number between 0 and 1 specifying the percentage of the approximate nearest-neighbor searches that return the exact nearest-neighbor. 
            Using a higher value for this parameter gives more accurate results, but the search takes longer. The optimum value usually depends on the application.</param>
            <param name="build_weight">Specifies the importance of the index build time raported to the nearest-neighbor search time. 
            In some applications it’s acceptable for the index build step to take a long time if the subsequent searches in the index can be performed very fast. 
            In other applications it’s required that the index be build as fast as possible even if that leads to slightly longer search times.</param>
            <param name="memory_weight">Is used to specify the tradeoff between time (index build time and search time) and memory used by the index. 
            A value less than 1 gives more importance to the time spent and a value greater than 1 gives more importance to the memory usage.</param>
            <param name="sample_fraction">Is a number between 0 and 1 indicating what fraction of the dataset to use in the automatic parameter configuration algorithm. 
            Running the algorithm on the full dataset gives the most accurate results, but for very large datasets can take longer than desired. 
            In such case using just a fraction of the data helps speeding up this algorithm while still giving good approximations of the optimum parameters.</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.AutotunedIndexParams.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.Flann.CompositeIndexParams">
            <summary>
            When using a parameters object of this type the index created combines the randomized kd-trees and the hierarchical k-means tree.
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Flann.CompositeIndexParams.SizeOf">
            <summary>
            sizeof(cv::flann::CompositeIndexParams)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.CompositeIndexParams.#ctor(System.Int32,System.Int32,System.Int32,OpenCvSharp.CPlusPlus.FlannCentersInit,System.Single)">
            <summary>
            
            </summary>
            <param name="trees">The number of parallel kd-trees to use. Good values are in the range [1..16]</param>
            <param name="branching">The branching factor to use for the hierarchical k-means tree</param>
            <param name="iterations">The maximum number of iterations to use in the k-means clustering stage when building the k-means tree. A value of -1 used here means that the k-means clustering should be iterated until convergence</param>
            <param name="centers_init">The algorithm to use for selecting the initial centers when performing a k-means clustering step. </param>
            <param name="cb_index">This parameter (cluster boundary index) influences the way exploration is performed in the hierarchical kmeans tree. When cb_index is zero the next kmeans domain to be explored is choosen to be the one with the closest center. A value greater then zero also takes into account the size of the domain.</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.CompositeIndexParams.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.Flann.SearchParams_old">
            <summary>
            Search parameters
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.SearchParams_old.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="checks">The number of times the tree(s) in the index should be recursively traversed.</param>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Flann.SearchParams_old.Checks">
            <summary>
            The number of times the tree(s) in the index should be recursively traversed.
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.Flann.KDTreeIndexParams">
            <summary>
            When passing an object of this type the index constructed will consist of a set
            of randomized kd-trees which will be searched in parallel.
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Flann.KDTreeIndexParams.SizeOf">
            <summary>
            sizeof(cv::flann::KDTreeIndexParams)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.KDTreeIndexParams.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="trees">The number of parallel kd-trees to use. Good values are in the range [1..16]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.KDTreeIndexParams.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.Flann.LinearIndexParams">
            <summary>
            the index will perform a linear, brute-force search.
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Flann.LinearIndexParams.SizeOf">
            <summary>
            sizeof(cv::flann::LinearIndexParams)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.LinearIndexParams.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.LinearIndexParams.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.StarDetector">
            <summary>
            Star Detector
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StarDetector.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StarDetector.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="maxSize"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StarDetector.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="maxSize"></param>
            <param name="responseThreshold"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StarDetector.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="maxSize"></param>
            <param name="responseThreshold"></param>
            <param name="lineThresholdProjected"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StarDetector.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="maxSize"></param>
            <param name="responseThreshold"></param>
            <param name="lineThresholdProjected"></param>
            <param name="lineThresholdBinarized"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StarDetector.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="maxSize"></param>
            <param name="responseThreshold"></param>
            <param name="lineThresholdProjected"></param>
            <param name="lineThresholdBinarized"></param>
            <param name="suppressNonmaxSize"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StarDetector.GetKeyPoints(OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Retrieves keypoints using the StarDetector algorithm.
            </summary>
            <param name="image">The input 8-bit grayscale image</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StarDetector.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.CvAdaptiveSkinDetector">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.CvAdaptiveSkinDetector._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvAdaptiveSkinDetector.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvAdaptiveSkinDetector.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="samplingDivider"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvAdaptiveSkinDetector.#ctor(System.Int32,OpenCvSharp.CPlusPlus.MorphingMethod)">
            <summary>
            
            </summary>
            <param name="samplingDivider"></param>
            <param name="morphingMethod"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvAdaptiveSkinDetector.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvAdaptiveSkinDetector.Process(OpenCvSharp.IplImage,OpenCvSharp.IplImage)">
            <summary>
            
            </summary>
            <param name="inputBGRImage"></param>
            <param name="outputHueMask"></param>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.StdVectorRect">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.StdVectorRect._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorRect.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorRect.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorRect.#ctor(OpenCvSharp.CvRect[])">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorRect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorRect.ToArray">
            <summary>
            Converts std::vector to managed array
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorRect.Size">
            <summary>
            vector.size()
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorRect.ElemPtr">
            <summary>
            &amp;vector[0]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.StdVectorByte">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.StdVectorByte._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorByte.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorByte.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorByte.#ctor(System.Byte[])">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorByte.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorByte.ToArray">
            <summary>
            Converts std::vector to managed array
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorByte.Size">
            <summary>
            vector.size()
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorByte.ElemPtr">
            <summary>
            &amp;vector[0]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.MatDiagType">
            <summary>
            diagonal type
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.MatDiagType.Upper">
            <summary>
            a diagonal from the upper half
            [&lt; 0]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.MatDiagType.Main">
            <summary>
            Main dialonal
            [= 0]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.MatDiagType.Lower">
            <summary>
            a diagonal from the lower half
            [&gt; 0]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.Algorithm">
            <summary>
            Base class for high-level OpenCV algorithms
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Algorithm.SizeOf">
            <summary>
            sizeof(BackgroundSubtractor)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Algorithm._disposed">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Algorithm.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Algorithm.#ctor(System.IntPtr)">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Algorithm.Release">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Algorithm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.HistogramNormType">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.HistogramNormType.L2Hys">
            <summary>
            
            [HOGDescriptor::L2Hys]
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.ExtensionAttribute">
            <summary>
            拡張メソッドをコンパイルするのに必要となるExtensionAttributeの宣言
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.CvCpp">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.ToPtr(OpenCvSharp.ICvPtrHolder)">
            <summary>
            引数がnullの時はIntPtr.Zeroに変換する
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.MorphologyDefaultBorderValue">
            <summary>
            Default borderValue for Dilate/Erode
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Canny(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,System.Double,System.Double,OpenCvSharp.ApertureSize,System.Boolean)">
            <summary>
            Finds edges in an image using Canny algorithm.
            </summary>
            <param name="image">Single-channel 8-bit input image</param>
            <param name="edges">The output edge map. It will have the same size and the same type as image</param>
            <param name="threshold1">The first threshold for the hysteresis procedure</param>
            <param name="threshold2">The second threshold for the hysteresis procedure</param>
            <param name="apertureSize">Aperture size for the Sobel operator [By default this is ApertureSize.Size3]</param>
            <param name="L2gradient">Indicates, whether the more accurate L2 norm should be used to compute the image gradient magnitude (true), or a faster default L1 norm is enough (false). [By default this is false]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.CvtColor(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.ColorConversion,System.Int32)">
            <summary>
            Converts image from one color space to another
            </summary>
            <param name="src">The source image, 8-bit unsigned, 16-bit unsigned or single-precision floating-point</param>
            <param name="dst">The destination image; will have the same size and the same depth as src</param>
            <param name="code">The color space conversion code</param>
            <param name="dstCn">The number of channels in the destination image; if the parameter is 0, the number of the channels will be derived automatically from src and the code</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Dilate(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,System.Nullable{OpenCvSharp.CvPoint},System.Int32,OpenCvSharp.BorderType,System.Nullable{OpenCvSharp.CvScalar})">
            <summary>
            Dilates an image by using a specific structuring element.
            </summary>
            <param name="src">The source image</param>
            <param name="dst">The destination image. It will have the same size and the same type as src</param>
            <param name="element">The structuring element used for dilation. If element=new Mat() , a 3x3 rectangular structuring element is used</param>
            <param name="anchor">Position of the anchor within the element. The default value (-1, -1) means that the anchor is at the element center</param>
            <param name="iterations">The number of times dilation is applied. [By default this is 1]</param>
            <param name="borderType">The pixel extrapolation method. [By default this is BorderType.Constant]</param>
            <param name="borderValue">The border value in case of a constant border. The default value has a special meaning. [By default this is CvCpp.MorphologyDefaultBorderValue()]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Erode(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,System.Nullable{OpenCvSharp.CvPoint},System.Int32,OpenCvSharp.BorderType,System.Nullable{OpenCvSharp.CvScalar})">
            <summary>
            Erodes an image by using a specific structuring element.
            </summary>
            <param name="src">The source image</param>
            <param name="dst">The destination image. It will have the same size and the same type as src</param>
            <param name="element">The structuring element used for dilation. If element=new Mat(), a 3x3 rectangular structuring element is used</param>
            <param name="anchor">Position of the anchor within the element. The default value (-1, -1) means that the anchor is at the element center</param>
            <param name="iterations">The number of times erosion is applied</param>
            <param name="borderType">The pixel extrapolation method</param>
            <param name="borderValue">The border value in case of a constant border. The default value has a special meaning. [By default this is CvCpp.MorphologyDefaultBorderValue()]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.HoughCircles(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.HoughCirclesMethod,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Finds circles in a grayscale image using a Hough transform.
            </summary>
            <param name="image">The 8-bit, single-channel, grayscale input image</param>
            <param name="method">Currently, the only implemented method is HoughCirclesMethod.Gradient</param>
            <param name="dp">The inverse ratio of the accumulator resolution to the image resolution. </param>
            <param name="minDist">Minimum distance between the centers of the detected circles. </param>
            <param name="param1">The first method-specific parameter. [By default this is 100]</param>
            <param name="param2">The second method-specific parameter. [By default this is 100]</param>
            <param name="minRadius">Minimum circle radius. [By default this is 0]</param>
            <param name="maxRadius">Maximum circle radius. [By default this is 0] </param>
            <returns>The output vector found circles. Each vector is encoded as 3-element floating-point vector (x, y, radius)</returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.HoughLines(OpenCvSharp.CPlusPlus.Mat,System.Double,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            Finds lines in a binary image using standard Hough transform.
            </summary>
            <param name="image">The 8-bit, single-channel, binary source image. The image may be modified by the function</param>
            <param name="rho">Distance resolution of the accumulator in pixels</param>
            <param name="theta">Angle resolution of the accumulator in radians</param>
            <param name="threshold">The accumulator threshold parameter. Only those lines are returned that get enough votes ( &gt; threshold )</param>
            <param name="srn">For the multi-scale Hough transform it is the divisor for the distance resolution rho. [By default this is 0]</param>
            <param name="stn">For the multi-scale Hough transform it is the divisor for the distance resolution theta. [By default this is 0]</param>
            <returns>The output vector of lines. Each line is represented by a two-element vector (rho, theta) . 
            rho is the distance from the coordinate origin (0,0) (top-left corner of the image) and theta is the line rotation angle in radians</returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.HoughLinesP(OpenCvSharp.CPlusPlus.Mat,System.Double,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            Finds lines segments in a binary image using probabilistic Hough transform.
            </summary>
            <param name="image"></param>
            <param name="rho">Distance resolution of the accumulator in pixels</param>
            <param name="theta">Angle resolution of the accumulator in radians</param>
            <param name="threshold">The accumulator threshold parameter. Only those lines are returned that get enough votes ( &gt; threshold )</param>
            <param name="minLineLength">The minimum line length. Line segments shorter than that will be rejected. [By default this is 0]</param>
            <param name="maxLineGap">The maximum allowed gap between points on the same line to link them. [By default this is 0]</param>
            <returns>The output lines. Each line is represented by a 4-element vector (x1, y1, x2, y2)</returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.MorphologyEx(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.MorphologyOperation,OpenCvSharp.CPlusPlus.Mat,System.Nullable{OpenCvSharp.CvPoint},System.Int32,OpenCvSharp.BorderType,System.Nullable{OpenCvSharp.CvScalar})">
            <summary>
            Performs advanced morphological transformations
            </summary>
            <param name="src">Source image</param>
            <param name="dst">Destination image. It will have the same size and the same type as src</param>
            <param name="op">Type of morphological operation</param>
            <param name="element">Structuring element</param>
            <param name="anchor">Position of the anchor within the element. The default value (-1, -1) means that the anchor is at the element center</param>
            <param name="iterations">Number of times erosion and dilation are applied. [By default this is 1]</param>
            <param name="borderType">The pixel extrapolation method. [By default this is BorderType.Constant]</param>
            <param name="borderValue">The border value in case of a constant border. The default value has a special meaning. [By default this is CvCpp.MorphologyDefaultBorderValue()]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Add(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Computes the per-element sum of two arrays or an array and a scalar.
            </summary>
            <param name="src1">The first source array</param>
            <param name="src2">The second source array. It must have the same size and same type as src1</param>
            <param name="dst">The destination array; it will have the same size and same type as src1</param>
            <param name="mask">The optional operation mask, 8-bit single channel array; specifies elements of the destination array to be changed. [By default this is null]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Add(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvScalar,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Computes the per-element sum of two arrays or an array and a scalar.
            </summary>
            <param name="src1">The first source array</param>
            <param name="sc">Scalar; the second input parameter</param>
            <param name="dst">The destination array; it will have the same size and same type as src1</param>
            <param name="mask">The optional operation mask, 8-bit single channel array; specifies elements of the destination array to be changed. [By default this is null]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Circle(OpenCvSharp.CPlusPlus.Mat,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center_x">X-coordinate of the center of the circle. </param>
            <param name="center_y">Y-coordinate of the center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates that a filled circle has to be drawn. [By default this is 1]</param>
            <param name="line_type">Type of the circle boundary. [By default this is LineType.Link8]</param>
            <param name="shift">Number of fractional bits in the center coordinates and radius value. [By default this is 0]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Circle(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center">Center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates that a filled circle has to be drawn. [By default this is 1]</param>
            <param name="line_type">Type of the circle boundary. [By default this is LineType.Link8]</param>
            <param name="shift">Number of fractional bits in the center coordinates and radius value. [By default this is 0]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.ConvertScaleAbs(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,System.Double,System.Double)">
            <summary>
            Scales, computes absolute values and converts the result to 8-bit.
            </summary>
            <param name="src">The source array</param>
            <param name="dst">The destination array</param>
            <param name="alpha">The optional scale factor. [By default this is 1]</param>
            <param name="beta">The optional delta added to the scaled values. [By default this is 0]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.CvarrToMat(OpenCvSharp.CvArr,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Converts CvMat, IplImage or CvMatND to Mat.
            </summary>
            <param name="arr">The source CvMat, IplImage or CvMatND</param>
            <param name="copyData">
            When it is false (default value), no data is copied, only the new header is created. 
            The the parameter is true, all the data is copied, then user may deallocate the original array right after the conversion. [By default this is false]
            </param>
            <param name="allowND">
            When it is true (default value), then CvMatND is converted to Mat if it’s possible 
            (e.g. then the data is contiguous). If it’s not possible, or when the parameter is false, the function will report an error. [By default this is true]
            </param>
            <param name="coiMode">
            The parameter specifies how the IplImage COI (when set) is handled.
            * If coiMode=false, the function will report an error if COI is set.
            * If coiMode=true, the function will never report an error; instead it returns the header to the whole original image 
            and user will have to check and process COI manually, see extractImageCOI. [By default this is false]
            </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Divide(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,System.Double)">
            <summary>
            Performs per-element division of two arrays or a scalar by an array.
            </summary>
            <param name="src1">The first source array</param>
            <param name="src2">The second source array; should have the same size and same type as src1</param>
            <param name="dst">The destination array; will have the same size and same type as src2</param>
            <param name="scale">Scale factor [By default this is 1]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Divide(System.Double,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Performs per-element division of two arrays or a scalar by an array.
            </summary>
            <param name="scale">Scale factor</param>
            <param name="src">The first source array</param>
            <param name="dst">The destination array; will have the same size and same type as src2</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Ellipse(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="center">Center of the ellipse. </param>
            <param name="axes">Length of the ellipse axes. </param>
            <param name="angle">Rotation angle. </param>
            <param name="start_angle">Starting angle of the elliptic arc. </param>
            <param name="end_angle">Ending angle of the elliptic arc. </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse arc. [By default this is 1]</param>
            <param name="line_type">Type of the ellipse boundary. [By default this is LineType.Link8]</param>
            <param name="shift">Number of fractional bits in the center coordinates and axes' values. [By default this is 0]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Ellipse(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvBox2D,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="box">The enclosing box of the ellipse drawn </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse boundary. [By default this is 1]</param>
            <param name="line_type">Type of the ellipse boundary. [By default this is LineType.Link8]</param>
            <param name="shift">Number of fractional bits in the box vertex coordinates. [By default this is 0]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.ExtractImageCOI(OpenCvSharp.CvArr,OpenCvSharp.CPlusPlus.Mat,System.Int32)">
            <summary>
            Extract the selected image channel
            </summary>
            <param name="arr">The source array. It should be a pointer to CvMat or IplImage</param>
            <param name="coiimg">The destination array; will have single-channel, and the same size and the same depth as src</param>
            <param name="coi">If the parameter is &gt;=0, it specifies the channel to extract; 
            If it is &lt;0, src must be a pointer to IplImage with valid COI set - then the selected COI is extracted. [By default this is -1]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.InsertImageCOI(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvArr,System.Int32)">
            <summary>
            
            </summary>
            <param name="coiimg"></param>
            <param name="arr"></param>
            <param name="coi">[By default this is -1]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Line(OpenCvSharp.CPlusPlus.Mat,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="img">The image. </param>
            <param name="pt1_x">First point's x-coordinate of the line segment. </param>
            <param name="pt1_y">First point's y-coordinate of the line segment. </param>
            <param name="pt2_x">Second point's x-coordinate of the line segment. </param>
            <param name="pt2_y">Second point's y-coordinate of the line segment. </param>
            <param name="color">Line color. </param>
            <param name="thickness">Line thickness. [By default this is 1]</param>
            <param name="line_type">Type of the line. [By default this is LineType.Link8]</param>
            <param name="shift">Number of fractional bits in the point coordinates. [By default this is 0]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Line(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="img">The image. </param>
            <param name="pt1">First point of the line segment. </param>
            <param name="pt2">Second point of the line segment. </param>
            <param name="color">Line color. </param>
            <param name="thickness">Line thickness. [By default this is 1]</param>
            <param name="line_type">Type of the line. [By default this is LineType.Link8]</param>
            <param name="shift">Number of fractional bits in the point coordinates. [By default this is 0]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Multiply(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,System.Double)">
            <summary>
            Calculates the per-element scaled product of two arrays
            </summary>
            <param name="src1">The first source array</param>
            <param name="src2">The second source array of the same size and the same type as src1</param>
            <param name="dst">The destination array; will have the same size and the same type as src1</param>
            <param name="scale">The optional scale factor. [By default this is 1]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Rectangle(OpenCvSharp.CPlusPlus.Mat,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1_x">X-coordinate of the one of the rectangle vertices. </param>
            <param name="pt1_y">Y-coordinate of the one of the rectangle vertices. </param>
            <param name="pt2_x">X-coordinate of the opposite rectangle vertex. </param>
            <param name="pt2_y">Y-coordinate of the opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values make the function to draw a filled rectangle. [By default this is 1]</param>
            <param name="line_type">Type of the line, see cvLine description. [By default this is LineType.Link8]</param>
            <param name="shift">Number of fractional bits in the point coordinates. [By default this is 0]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Rectangle(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1">One of the rectangle vertices. </param>
            <param name="pt2">Opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values make the function to draw a filled rectangle. [By default this is 1]</param>
            <param name="line_type">Type of the line, see cvLine description. [By default this is LineType.Link8]</param>
            <param name="shift">Number of fractional bits in the point coordinates. [By default this is 0]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Rectangle(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvRect,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="rect">Rectangle.</param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values make the function to draw a filled rectangle. [By default this is 1]</param>
            <param name="line_type">Type of the line, see cvLine description. [By default this is LineType.Link8]</param>
            <param name="shift">Number of fractional bits in the point coordinates. [By default this is 0]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Subtract(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Calculates per-element difference between two arrays or array and a scalar
            </summary>
            <param name="src1">The first source array</param>
            <param name="src2">The second source array. It must have the same size and same type as src1</param>
            <param name="dst">The destination array; it will have the same size and same type as src1</param>
            <param name="mask">The optional operation mask, 8-bit single channel array; specifies elements of the destination array to be changed. [By default this is null]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Subtract(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvScalar,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Calculates per-element difference between two arrays or array and a scalar
            </summary>
            <param name="src1">The first source array</param>
            <param name="sc">Scalar; the first or the second input parameter</param>
            <param name="dst">The destination array; it will have the same size and same type as src1</param>
            <param name="mask">The optional operation mask, 8-bit single channel array; specifies elements of the destination array to be changed. [By default this is null]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Subtract(OpenCvSharp.CvScalar,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Calculates per-element difference between two arrays or array and a scalar
            </summary>
            <param name="sc">Scalar; the first or the second input parameter</param>
            <param name="src2">The second source array. It must have the same size and same type as src1</param>
            <param name="dst">The destination array; it will have the same size and same type as src1</param>
            <param name="mask">The optional operation mask, 8-bit single channel array; specifies elements of the destination array to be changed. [By default this is null]</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.NamedWindow(System.String,OpenCvSharp.WindowMode)">
            <summary>
            Creates a window.
            </summary>
            <param name="winname">Name of the window in the window caption that may be used as a window identifier.</param>
            <param name="flags">
            Flags of the window. Currently the only supported flag is CV WINDOW AUTOSIZE. If this is set, 
            the window size is automatically adjusted to fit the displayed image (see imshow ), and the user can not change the window size manually.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.ImShow(System.String,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Displays the image in the specified window
            </summary>
            <param name="winname">Name of the window.</param>
            <param name="mat">Image to be shown.</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.ImRead(System.String,OpenCvSharp.LoadMode)">
            <summary>
            Loads an image from a file.
            </summary>
            <param name="filename">Name of file to be loaded.</param>
            <param name="flags">Specifies color type of the loaded image</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.ImWrite(System.String,OpenCvSharp.CPlusPlus.Mat,System.Int32[])">
            <summary>
            Saves an image to a specified file.
            </summary>
            <param name="filename"></param>
            <param name="img"></param>
            <param name="prms"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.ImWrite(System.String,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.ImageEncodingParam[])">
            <summary>
            Saves an image to a specified file.
            </summary>
            <param name="filename"></param>
            <param name="img"></param>
            <param name="prms"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.ImDecode(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.LoadMode)">
            <summary>
            Reads image from the specified buffer in memory.
            </summary>
            <param name="buf">The input array of vector of bytes.</param>
            <param name="flags">The same flags as in imread</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.ImEncode(System.String,OpenCvSharp.CPlusPlus.Mat,System.Byte[]@,System.Int32[])">
            <summary>
            Compresses the image and stores it in the memory buffer
            </summary>
            <param name="ext">The file extension that defines the output format</param>
            <param name="img">The image to be written</param>
            <param name="buf"></param>
            <param name="prms"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.ImEncode(System.String,OpenCvSharp.CPlusPlus.Mat,System.Byte[]@,OpenCvSharp.ImageEncodingParam[])">
            <summary>
            Compresses the image and stores it in the memory buffer
            </summary>
            <param name="ext">The file extension that defines the output format</param>
            <param name="img">The image to be written</param>
            <param name="buf"></param>
            <param name="prms"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.WaitKey(System.Int32)">
            <summary>
            Waits for a pressed key.
            </summary>
            <param name="delay">Delay in milliseconds. 0 is the special value that means ”forever”</param>
            <returns>Returns the code of the pressed key or -1 if no key was pressed before the specified time had elapsed.</returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.FAST(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.KeyPoint[]@,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <param name="keypoints"></param>
            <param name="threshold"></param>
            <param name="nonmax_supression"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.InitModule_NonFree">
            <summary>
            You need to call this method before using SIFT/SURF functions.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.CppInvoke">
            <summary>
            P/Invoke methods of OpenCV C++ interface
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.CppInvoke.DllExtern">
            <summary>
            DLL file name
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CppInvoke.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CppInvoke.TryPInvoke">
            <summary>
            Checks whether PInvoke functions can be called
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.SURF">
            <summary>
            Class for extracting Speeded Up Robust Features from an image.
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.SURF.#ctor(System.Double,System.Boolean)">
            <summary>
            Creates SURF default parameters
            </summary>
            <param name="hessianThreshold">Only features with keypoint.hessian larger than that are extracted. </param>
            <param name="extended">false means basic descriptors (64 elements each), true means _extended descriptors (128 elements each) </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.SURF.Extract(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            detects keypoints using fast multi-scale Hessian detector
            </summary>
            <param name="img"></param>
            <param name="mask"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.SURF.Extract(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.KeyPoint[],System.Single[]@)">
            <summary>
            detects keypoints and computes the SURF descriptors for them. [useProvidedKeypoints = true]
            </summary>
            <param name="img"></param>
            <param name="mask"></param>
            <param name="keypoints"></param>
            <param name="descriptors"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.SURF.Extract(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.KeyPoint[]@,System.Single[]@)">
            <summary>
            detects keypoints and computes the SURF descriptors for them. [useProvidedKeypoints = false]
            </summary>
            <param name="img"></param>
            <param name="mask"></param>
            <param name="keypoints"></param>
            <param name="descriptors"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.SURF.GetPointOctave(OpenCvSharp.CvSURFPoint,OpenCvSharp.CvSURFParams)">
            <summary>
            
            </summary>
            <param name="kpt"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.SURF.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.StdVectorPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.StdVectorPoint._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorPoint.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorPoint.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorPoint.#ctor(OpenCvSharp.CvPoint[])">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorPoint.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorPoint.ToArray">
            <summary>
            Converts std::vector to managed array
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorPoint.Size">
            <summary>
            vector.size()
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorPoint.ElemPtr">
            <summary>
            &amp;vector[0]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.Flann.Index">
            <summary>
            The FLANN nearest neighbor index class. 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Flann.Index.SizeOf">
            <summary>
            sizeof(cv::flann::Index)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.Index.#ctor(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Flann.IndexParams)">
            <summary>
            Constructs a nearest neighbor search index for a given dataset.
            </summary>
            <param name="features">features – Matrix of type CV _ 32F containing the features(points) to index. The size of the matrix is num _ features x feature _ dimensionality.</param>
            <param name="params">Structure containing the index parameters. The type of index that will be constructed depends on the type of this parameter. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.Index.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.Index.KnnSearch(System.Single[],System.Int32[]@,System.Single[]@,System.Int32,OpenCvSharp.CPlusPlus.Flann.SearchParams)">
            <summary>
            Performs a K-nearest neighbor search for multiple query points.
            </summary>
            <param name="queries">The query points, one per row</param>
            <param name="indices">Indices of the nearest neighbors found</param>
            <param name="dists">Distances to the nearest neighbors found</param>
            <param name="knn">Number of nearest neighbors to search for</param>
            <param name="params">Search parameters</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.Index.KnnSearch(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,System.Int32,OpenCvSharp.CPlusPlus.Flann.SearchParams)">
            <summary>
            Performs a K-nearest neighbor search for multiple query points.
            </summary>
            <param name="queries">The query points, one per row</param>
            <param name="indices">Indices of the nearest neighbors found</param>
            <param name="dists">Distances to the nearest neighbors found</param>
            <param name="knn">Number of nearest neighbors to search for</param>
            <param name="params">Search parameters</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.Index.KnnSearch(OpenCvSharp.CPlusPlus.Mat,System.Int32[]@,System.Single[]@,System.Int32,OpenCvSharp.CPlusPlus.Flann.SearchParams)">
            <summary>
            Performs a K-nearest neighbor search for multiple query points.
            </summary>
            <param name="queries">The query points, one per row</param>
            <param name="indices">Indices of the nearest neighbors found</param>
            <param name="dists">Distances to the nearest neighbors found</param>
            <param name="knn">Number of nearest neighbors to search for</param>
            <param name="params">Search parameters</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.Index.RadiusSearch(System.Single[],System.Int32[],System.Single[],System.Single,System.Int32,OpenCvSharp.CPlusPlus.Flann.SearchParams)">
            <summary>
            Performs a radius nearest neighbor search for a given query point.
            </summary>
            <param name="queries">The query point</param>
            <param name="indices">Indices of the nearest neighbors found</param>
            <param name="dists">Distances to the nearest neighbors found</param>
            <param name="radius">Number of nearest neighbors to search for</param>
            <param name="maxResults"></param>
            <param name="params">Search parameters</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.Index.RadiusSearch(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,System.Single,System.Int32,OpenCvSharp.CPlusPlus.Flann.SearchParams)">
            <summary>
            Performs a radius nearest neighbor search for a given query point.
            </summary>
            <param name="queries">The query point</param>
            <param name="indices">Indices of the nearest neighbors found</param>
            <param name="dists">Distances to the nearest neighbors found</param>
            <param name="radius">Number of nearest neighbors to search for</param>
            <param name="maxResults"></param>
            <param name="params">Search parameters</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.Index.RadiusSearch(OpenCvSharp.CPlusPlus.Mat,System.Int32[],System.Single[],System.Single,System.Int32,OpenCvSharp.CPlusPlus.Flann.SearchParams)">
            <summary>
            Performs a radius nearest neighbor search for a given query point.
            </summary>
            <param name="queries">The query point</param>
            <param name="indices">Indices of the nearest neighbors found</param>
            <param name="dists">Distances to the nearest neighbors found</param>
            <param name="radius">Number of nearest neighbors to search for</param>
            <param name="maxResults"></param>
            <param name="params">Search parameters</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Flann.Index.Save(System.String)">
            <summary>
            Saves the index to a file.
            </summary>
            <param name="filename">The file to save the index to</param>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.MorphingMethod">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.MorphingMethod.None">
            <summary>
            
            [CvAdaptiveSkinDetector::MORPHING_METHOD_NONE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.MorphingMethod.Erode">
            <summary>
            
            [CvAdaptiveSkinDetector::MORPHING_METHOD_ERODE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.MorphingMethod.ErodeErode">
            <summary>
            
            [CvAdaptiveSkinDetector::MORPHING_METHOD_ERODE_ERODE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.MorphingMethod.ErodeDilate">
            <summary>
            
            [CvAdaptiveSkinDetector::MORPHING_METHOD_ERODE_DILATE]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.KeyPoint">
            <summary>
            Data structure for salient point detectors
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.KeyPoint.Pt">
            <summary>
            Coordinate of the point
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.KeyPoint.Size">
            <summary>
            Feature size
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.KeyPoint.Angle">
            <summary>
            Feature orientation in degrees (has negative value if the orientation is not defined/not computed)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.KeyPoint.Response">
            <summary>
            Feature strength (can be used to select only the most prominent key points)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.KeyPoint.Octave">
            <summary>
            Scale-space octave in which the feature has been found; may correlate with the size
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.KeyPoint.ClassID">
            <summary>
            Point class (can be used by feature classifiers or object detectors)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.#ctor(OpenCvSharp.CvPoint2D32f,System.Single,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            Complete constructor
            </summary>
            <param name="pt">Coordinate of the point</param>
            <param name="size">Feature size</param>
            <param name="angle">Feature orientation in degrees (has negative value if the orientation is not defined/not computed)</param>
            <param name="response">Feature strength (can be used to select only the most prominent key points)</param>
            <param name="octave">Scale-space octave in which the feature has been found; may correlate with the size</param>
            <param name="class_id">Point class (can be used by feature classifiers or object detectors)</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            Complete constructor
            </summary>
            <param name="x">X-coordinate of the point</param>
            <param name="y">Y-coordinate of the point</param>
            <param name="size">Feature size</param>
            <param name="angle">Feature orientation in degrees (has negative value if the orientation is not defined/not computed)</param>
            <param name="response">Feature strength (can be used to select only the most prominent key points)</param>
            <param name="octave">Scale-space octave in which the feature has been found; may correlate with the size</param>
            <param name="class_id">Point class (can be used by feature classifiers or object detectors)</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.Equals(OpenCvSharp.CPlusPlus.KeyPoint)">
            <summary>
            Specifies whether this object contains the same members as the specified Object.
            </summary>
            <param name="obj">The Object to test.</param>
            <returns>This method returns true if obj is the same type as this object and has the same members as this object.</returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.op_Equality(OpenCvSharp.CPlusPlus.KeyPoint,OpenCvSharp.CPlusPlus.KeyPoint)">
            <summary>
            Compares two CvPoint objects. The result specifies whether the members of each object are equal.
            </summary>
            <param name="lhs">A Point to compare.</param>
            <param name="rhs">A Point to compare.</param>
            <returns>This operator returns true if the members of left and right are equal; otherwise, false.</returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.op_Inequality(OpenCvSharp.CPlusPlus.KeyPoint,OpenCvSharp.CPlusPlus.KeyPoint)">
            <summary>
            Compares two CvPoint objects. The result specifies whether the members of each object are unequal.
            </summary>
            <param name="lhs">A Point to compare.</param>
            <param name="rhs">A Point to compare.</param>
            <returns>This operator returns true if the members of left and right are unequal; otherwise, false.</returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.Equals(System.Object)">
            <summary>
            Specifies whether this object contains the same members as the specified Object.
            </summary>
            <param name="obj">The Object to test.</param>
            <returns>This method returns true if obj is the same type as this object and has the same members as this object.</returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>An integer value that specifies a hash value for this object.</returns>
        </member>
    </members>
</doc>
