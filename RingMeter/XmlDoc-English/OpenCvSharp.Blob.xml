<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenCvSharp.Blob</name>
    </assembly>
    <members>
        <member name="T:OpenCvSharp.Blob.RenderBlobsMode">
            <summary>
            Render mode of cvRenderBlobs
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.RenderBlobsMode.Color">
            <summary>
            Render each blog with a different color.
            [CV_BLOB_RENDER_COLOR]
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.RenderBlobsMode.Centroid">
            <summary>
            Render centroid.
            CV_BLOB_RENDER_CENTROID]
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.RenderBlobsMode.BoundingBox">
            <summary>
            Render bounding box.
            [CV_BLOB_RENDER_BOUNDING_BOX]
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.RenderBlobsMode.Angle">
            <summary>
            Render angle.
            [CV_BLOB_RENDER_ANGLE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.RenderBlobsMode.ToLog">
            <summary>
            Print blob data to log out.
            [CV_BLOB_RENDER_TO_LOG]
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.RenderBlobsMode.ToStd">
            <summary>
            Print blob data to std out.
            [CV_BLOB_RENDER_TO_STD]
            </summary>
        </member>
        <member name="T:OpenCvSharp.Blob.CvBlobConst">
            <summary>
            Constants which are defined by cvblob
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobConst.DepthLabel">
            <summary>
            Size of a label in bits.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobConst.CV_BLOB_RENDER_COLOR">
            <summary>
            Render each blog with a different color.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobConst.CV_BLOB_RENDER_CENTROID">
            <summary>
            Render centroid.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobConst.CV_BLOB_RENDER_BOUNDING_BOX">
            <summary>
            Render bounding box.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobConst.CV_BLOB_RENDER_ANGLE">
            <summary>
            Render angle.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobConst.CV_BLOB_RENDER_TO_LOG">
            <summary>
             Print blob data to log out.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobConst.CV_BLOB_RENDER_TO_STD">
            <summary>
            Print blob data to std out.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobConst.CV_CHAINCODE_UP">
            <summary>
            Up.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobConst.CV_CHAINCODE_UP_RIGHT">
            <summary>
            Up and right.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobConst.CV_CHAINCODE_RIGHT">
            <summary>
            Right.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobConst.CV_CHAINCODE_DOWN_RIGHT">
            <summary>
            Down and right.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobConst.CV_CHAINCODE_DOWN">
            <summary>
            Down.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobConst.CV_CHAINCODE_DOWN_LEFT">
            <summary>
            Down and left.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobConst.CV_CHAINCODE_LEFT">
            <summary>
            Left.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobConst.CV_CHAINCODE_UP_LEFT">
            <summary>
            Up and left.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobConst.CV_TRACK_RENDER_ID">
            <summary>
            Print the ID of each track in the image.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobConst.CV_TRACK_RENDER_TO_LOG">
            <summary>
            Print track info to log out.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobConst.CV_TRACK_RENDER_TO_STD">
            <summary>
            Print track info to log out.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobConst.cvChainCodeMoves">
            <summary>
            Move vectors of chain codes.
            </summary>
        </member>
        <member name="T:OpenCvSharp.Blob.CvChainCodes">
            <summary>
            Chain code.
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvChainCodes.#ctor(System.IntPtr)">
            <summary>
            Initializes from pointer
            </summary>
            <param name="ptr">CvChainCodes*</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvChainCodes.FromPtr(System.IntPtr)">
            <summary>
            Initializes from pointer
            </summary>
            <param name="ptr">CvChainCodes*</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvChainCodes.Add(OpenCvSharp.Blob.CvChainCode)">
            <summary>
            Adds an item to the collection.
            </summary>
            <param name="item">The object to add to the collection.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvChainCodes.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvChainCodes.Contains(OpenCvSharp.Blob.CvChainCode)">
            <summary>
            Determines whether the collection contains a specific value.
            </summary>
            <param name="item">The object to locate in the collection.</param>
            <returns> true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvChainCodes.CopyTo(OpenCvSharp.Blob.CvChainCode[],System.Int32)">
            <summary>
            Copies the elements of the collection to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from collection. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvChainCodes.Remove(OpenCvSharp.Blob.CvChainCode)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="item">The object to remove from the collection.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvChainCodes.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection. 
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvChainCodes.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection. 
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvChainCodes.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvChainCodes.IsReadOnly">
            <summary>
            Gets a value indicating whether the collectio is read-only.
            </summary>
        </member>
        <member name="T:OpenCvSharp.Blob.CvBlobLib">
            <summary>
            Functions of cvblob library
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobLib.DepthLabel">
            <summary>
            Size of a label in bits.
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.Angle(OpenCvSharp.Blob.CvBlob)">
            <summary>
            Calculates angle orientation of a blob.
            This function uses central moments so cvCentralMoments should have been called before for this blob. (cvAngle)
            </summary>
            <param name="blob">Blob.</param>
            <returns>Angle orientation in radians.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.CentralMoments(OpenCvSharp.Blob.CvBlob,OpenCvSharp.IplImage)">
            <summary>
            Calculates central moment for a blob.
            Central moments will be stored in blob structure. (cvCentralMoments)
            </summary>
            <param name="blob">Blob.</param>
            <param name="img">Label image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.Centroid(OpenCvSharp.Blob.CvBlob)">
            <summary>
            Calculates centroid.
            Centroid will be returned and stored in the blob structure. (cvCentroid)
            </summary>
            <param name="blob">Blob whose centroid will be calculated.</param>
            <returns>Centroid.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.ContourPolygonArea(OpenCvSharp.Blob.CvContourPolygon)">
            <summary>
            Calculates area of a polygonal contour. 
            </summary>
            <param name="p">Contour (polygon type).</param>
            <returns>Area of the contour.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.ContourPolygonPerimeter(OpenCvSharp.Blob.CvContourPolygon)">
            <summary>
            Calculates perimeter of a polygonal contour.
            </summary>
            <param name="p">Contour (polygon type).</param>
            <returns>Perimeter of the contour.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.ConvertChainCodesToPolygon(OpenCvSharp.Blob.CvContourChainCode)">
            <summary>
            Convert a chain code contour to a polygon.
            </summary>
            <param name="cc">Chain code contour.</param>
            <returns>A polygon.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.FilterByArea(OpenCvSharp.Blob.CvBlobs,System.UInt32,System.UInt32)">
            <summary>
            Filter blobs by area. 
            Those blobs whose areas are not in range will be erased from the input list of blobs. (cvFilterByArea)
            </summary>
            <param name="blobs">List of blobs.</param>
            <param name="minArea">Minimun area.</param>
            <param name="maxArea">Maximun area.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.FilterLabels(OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.Blob.CvBlobs)">
            <summary>
            Draw a binary image with the blobs that have been given. (cvFilterLabels)
            </summary>
            <param name="imgIn">Input image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="imgOut">Output binary image (depth=IPL_DEPTH_8U and num. channels=1).</param>
            <param name="blobs">List of blobs to be drawn.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.GetLabel(OpenCvSharp.IplImage,System.UInt32,System.UInt32)">
            <summary>
            Get the label value from a labeled image.
            </summary>
            <param name="img">Label image.</param>
            <param name="x">X coordenate.</param>
            <param name="y">Y coordenate.</param>
            <returns>Label value.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.GreaterBlob(OpenCvSharp.Blob.CvBlobs)">
            <summary>
            Find greater blob. (cvGreaterBlob)
            </summary>
            <param name="blobs">List of blobs.</param>
            <returns>Label of greater blob.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.Label(OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.Blob.CvBlobs)">
            <summary>
            Label the connected parts of a binary image. (cvLabel)
            </summary>
            <param name="img">Input binary image (depth=IPL_DEPTH_8U and num. channels=1).</param>
            <param name="imgOut">Output image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="blobs">List of blobs.</param>
            <returns>Number of pixels that has been labeled.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.PolygonContourConvexHull(OpenCvSharp.Blob.CvContourPolygon)">
            <summary>
            Calculates convex hull of a contour.
            Uses the Melkman Algorithm. Code based on the version in http://w3.impa.br/~rdcastan/Cgeometry/.
            </summary>
            <param name="p">Contour (polygon type).</param>
            <returns>Convex hull.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.ReleaseBlobs(OpenCvSharp.Blob.CvBlobs)">
            <summary>
            Clear blobs structure. (cvReleaseBlobs)
            </summary>
            <param name="blobs">List of blobs.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.RenderBlob(OpenCvSharp.IplImage,OpenCvSharp.Blob.CvBlob,OpenCvSharp.IplImage,OpenCvSharp.IplImage)">
            <summary>
            Draws or prints information about a blob.
            </summary>
            <param name="imgLabel">Label image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="blob">Blob.</param>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.RenderBlob(OpenCvSharp.IplImage,OpenCvSharp.Blob.CvBlob,OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.Blob.RenderBlobsMode)">
            <summary>
            Draws or prints information about a blob.
            </summary>
            <param name="imgLabel">Label image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="blob">Blob.</param>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="mode">Render mode. By default is CV_BLOB_RENDER_COLOR|CV_BLOB_RENDER_CENTROID|CV_BLOB_RENDER_BOUNDING_BOX|CV_BLOB_RENDER_ANGLE.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.RenderBlob(OpenCvSharp.IplImage,OpenCvSharp.Blob.CvBlob,OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.Blob.RenderBlobsMode,OpenCvSharp.CvScalar)">
            <summary>
            Draws or prints information about a blob.
            </summary>
            <param name="imgLabel">Label image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="blob">Blob.</param>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="mode">Render mode. By default is CV_BLOB_RENDER_COLOR|CV_BLOB_RENDER_CENTROID|CV_BLOB_RENDER_BOUNDING_BOX|CV_BLOB_RENDER_ANGLE.</param>
            <param name="color">Color to render (if CV_BLOB_RENDER_COLOR is used).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.RenderBlob(OpenCvSharp.IplImage,OpenCvSharp.Blob.CvBlob,OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.Blob.RenderBlobsMode,OpenCvSharp.CvScalar,System.Double)">
            <summary>
            Draws or prints information about a blob.
            </summary>
            <param name="imgLabel">Label image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="blob">Blob.</param>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="mode">Render mode. By default is CV_BLOB_RENDER_COLOR|CV_BLOB_RENDER_CENTROID|CV_BLOB_RENDER_BOUNDING_BOX|CV_BLOB_RENDER_ANGLE.</param>
            <param name="color">Color to render (if CV_BLOB_RENDER_COLOR is used).</param>
            <param name="alpha">If mode CV_BLOB_RENDER_COLOR is used. 1.0 indicates opaque and 0.0 translucent (1.0 by default).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.RenderBlobs(OpenCvSharp.IplImage,OpenCvSharp.Blob.CvBlobs,OpenCvSharp.IplImage,OpenCvSharp.IplImage)">
            <summary>
            Draws or prints information about blobs. (cvRenderBlobs)
            </summary>
            <param name="imgLabel">Label image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="blobs">List of blobs.</param>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.RenderBlobs(OpenCvSharp.IplImage,OpenCvSharp.Blob.CvBlobs,OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.Blob.RenderBlobsMode)">
            <summary>
            Draws or prints information about blobs. (cvRenderBlobs)
            </summary>
            <param name="imgLabel">Label image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="blobs">List of blobs.</param>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="mode">Render mode. By default is CV_BLOB_RENDER_COLOR|CV_BLOB_RENDER_CENTROID|CV_BLOB_RENDER_BOUNDING_BOX|CV_BLOB_RENDER_ANGLE.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.RenderBlobs(OpenCvSharp.IplImage,OpenCvSharp.Blob.CvBlobs,OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.Blob.RenderBlobsMode,System.Double)">
            <summary>
            Draws or prints information about blobs. (cvRenderBlobs)
            </summary>
            <param name="imgLabel">Label image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="blobs">List of blobs.</param>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="mode">Render mode. By default is CV_BLOB_RENDER_COLOR|CV_BLOB_RENDER_CENTROID|CV_BLOB_RENDER_BOUNDING_BOX|CV_BLOB_RENDER_ANGLE.</param>
            <param name="alpha">If mode CV_BLOB_RENDER_COLOR is used. 1.0 indicates opaque and 0.0 translucent (1.0 by default).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.RenderContourChainCode(OpenCvSharp.Blob.CvContourChainCode,OpenCvSharp.IplImage)">
            <summary>
            Draw a contour.
            </summary>
            <param name="contour"> Chain code contour.</param>
            <param name="img">Image to draw on.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.RenderContourChainCode(OpenCvSharp.Blob.CvContourChainCode,OpenCvSharp.IplImage,OpenCvSharp.CvScalar)">
            <summary>
            Draw a contour.
            </summary>
            <param name="contour"> Chain code contour.</param>
            <param name="img">Image to draw on.</param>
            <param name="color">Color to draw (default, white).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.RenderContourPolygon(OpenCvSharp.Blob.CvContourPolygon,OpenCvSharp.IplImage)">
            <summary>
            Draw a polygon.
            </summary>
            <param name="contour">Polygon contour.</param>
            <param name="img">Image to draw on.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.RenderContourPolygon(OpenCvSharp.Blob.CvContourPolygon,OpenCvSharp.IplImage,OpenCvSharp.CvScalar)">
            <summary>
            Draw a polygon.
            </summary>
            <param name="contour">Polygon contour.</param>
            <param name="img">Image to draw on.</param>
            <param name="color">Color to draw (default, white).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.RenderTracks(OpenCvSharp.Blob.CvTracks,OpenCvSharp.IplImage,OpenCvSharp.IplImage)">
            <summary>
            Prints tracks information.
            </summary>
            <param name="tracks">List of tracks.</param>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.RenderTracks(OpenCvSharp.Blob.CvTracks,OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.Blob.RenderTracksMode)">
            <summary>
            Prints tracks information.
            </summary>
            <param name="tracks">List of tracks.</param>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="mode">Render mode. By default is CV_TRACK_RENDER_ID.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.RenderTracks(OpenCvSharp.Blob.CvTracks,OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.Blob.RenderTracksMode,OpenCvSharp.CvFont)">
            <summary>
            Prints tracks information.
            </summary>
            <param name="tracks">List of tracks.</param>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="mode">Render mode. By default is CV_TRACK_RENDER_ID.</param>
            <param name="font">OpenCV font for print on the image.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.SetImageROItoBlob(OpenCvSharp.IplImage,OpenCvSharp.Blob.CvBlob)">
            <summary>
            Set the ROI of an image to the bounding box of a blob.
            </summary>
            <param name="img">Image.</param>
            <param name="blob">Blob.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.SimplifyPolygon(OpenCvSharp.Blob.CvContourPolygon)">
            <summary>
            Simplify a polygon reducing the number of vertex according the distance "delta". 
            Uses a version of the Ramer-Douglas-Peucker algorithm (http://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm). 
            </summary>
            <param name="p">Contour (polygon type).</param>
            <returns>A simplify version of the original polygon.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.SimplifyPolygon(OpenCvSharp.Blob.CvContourPolygon,System.Double)">
            <summary>
            Simplify a polygon reducing the number of vertex according the distance "delta". 
            Uses a version of the Ramer-Douglas-Peucker algorithm (http://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm). 
            </summary>
            <param name="p">Contour (polygon type).</param>
            <param name="delta">Minimun distance.</param>
            <returns>A simplify version of the original polygon.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.UpdateTracks(OpenCvSharp.Blob.CvBlobs,OpenCvSharp.Blob.CvTracks,System.Double,System.UInt32)">
            <summary>
            Updates list of tracks based on current blobs. 
            </summary>
            <param name="b">List of blobs.</param>
            <param name="t">List of tracks.</param>
            <param name="thDistance">Max distance to determine when a track and a blob match.</param>
            <param name="thInactive">Max number of frames a track can be inactive.</param>
            <remarks>
            Tracking based on:
            A. Senior, A. Hampapur, Y-L Tian, L. Brown, S. Pankanti, R. Bolle. Appearance Models for
            Occlusion Handling. Second International workshop on Performance Evaluation of Tracking and
            Surveillance Systems &amp; CVPR'01. December, 2001.
            (http://www.research.ibm.com/peoplevision/PETS2001.pdf)
            </remarks>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.WriteContourPolygonCSV(OpenCvSharp.Blob.CvContourPolygon,System.String)">
            <summary>
            Write a contour to a CSV (Comma-separated values) file.
            </summary>
            <param name="p">Polygon contour.</param>
            <param name="filename">File name.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.WriteContourPolygonSVG(OpenCvSharp.Blob.CvContourPolygon,System.String)">
            <summary>
            Write a contour to a SVG file.
            </summary>
            <param name="p">Polygon contour.</param>
            <param name="filename">File name.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobLib.WriteContourPolygonSVG(OpenCvSharp.Blob.CvContourPolygon,System.String,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar)">
            <summary>
            Write a contour to a SVG file.
            </summary>
            <param name="p">Polygon contour.</param>
            <param name="filename">File name.</param>
            <param name="stroke">Stroke color (black by default).</param>
            <param name="fill">Fill color (white by default).</param>
        </member>
        <member name="T:OpenCvSharp.Blob.CvBlobInvoke">
            <summary>
            cvblob's P/Invoke methods
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobInvoke.DllExtern">
            <summary>
            DLL file name
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobInvoke.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobInvoke.TryPInvoke">
            <summary>
            Checks whether PInvoke functions can be called
            </summary>
        </member>
        <member name="T:OpenCvSharp.Blob.RenderTracksMode">
            <summary>
            Render mode of cvRenderTracks
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.RenderTracksMode.ID">
            <summary>
            Print the ID of each track in the image.
            [CV_TRACK_RENDER_ID]
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.RenderTracksMode.ToLog">
            <summary>
            Print track info to log out.
            [CV_TRACK_RENDER_TO_LOG]
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.RenderTracksMode.ToStd">
            <summary>
            Print track info to log out.
            [CV_TRACK_RENDER_TO_STD]
            </summary>
        </member>
        <member name="T:OpenCvSharp.Blob.CvTracks">
            <summary>
            List of tracks.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvTracks.SizeOf">
            <summary>
            sizeof(CvTracks)
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvTracks._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvTracks.#ctor">
            <summary>
            Default onstructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvTracks.#ctor(System.IntPtr)">
            <summary>
            Initializes from pointer
            </summary>
            <param name="ptr">CvTracks*</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvTracks.FromPtr(System.IntPtr)">
            <summary>
            Initializes from pointer
            </summary>
            <param name="ptr">struct CvTracks*</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvTracks.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvTracks.UpdateTracks(OpenCvSharp.Blob.CvBlobs,System.Double,System.UInt32)">
            <summary>
            Updates list of tracks based on current blobs. 
            </summary>
            <param name="b">List of blobs.</param>
            <param name="thDistance">Max distance to determine when a track and a blob match.</param>
            <param name="thInactive">Max number of frames a track can be inactive.</param>
            <remarks>
            Tracking based on:
            A. Senior, A. Hampapur, Y-L Tian, L. Brown, S. Pankanti, R. Bolle. Appearance Models for
            Occlusion Handling. Second International workshop on Performance Evaluation of Tracking and
            Surveillance Systems &amp; CVPR'01. December, 2001.
            (http://www.research.ibm.com/peoplevision/PETS2001.pdf)
            </remarks>
        </member>
        <member name="M:OpenCvSharp.Blob.CvTracks.RenderTracks(OpenCvSharp.IplImage,OpenCvSharp.IplImage)">
            <summary>
            Prints tracks information.
            </summary>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvTracks.RenderTracks(OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.Blob.RenderTracksMode)">
            <summary>
            Prints tracks information.
            </summary>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="mode">Render mode. By default is CV_TRACK_RENDER_ID.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvTracks.RenderTracks(OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.Blob.RenderTracksMode,OpenCvSharp.CvFont)">
            <summary>
            Prints tracks information.
            </summary>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="mode">Render mode. By default is CV_TRACK_RENDER_ID.</param>
            <param name="font">OpenCV font for print on the image.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvTracks.Add(System.UInt32,OpenCvSharp.Blob.CvTrack)">
            <summary>
            Adds the specified key and value to the dictionary.
            </summary>
            <param name="key">The object to use as the key.</param>
            <param name="value">The object to use as the value.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvTracks.ContainsKey(System.UInt32)">
            <summary>
            Determines whether the IDictionary contains an element with the specified key. 
            </summary>
            <param name="key">The key to locate in the IDictionary&lt;TKey,TValue&gt;.</param>
            <returns>true if the IDictionary&lt;TKey,TValue&gt; contains an element with the key; otherwise, false. </returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvTracks.Remove(System.UInt32)">
            <summary>
            Removes the element with the specified key from the IDictionary&lt;TKey,TValue&gt;.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns> true if the element is successfully found and removed; otherwise, false. This method returns false if key is not found in the IDictionary&lt;TKey, TValue&gt;.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvTracks.TryGetValue(System.UInt32,OpenCvSharp.Blob.CvTrack@)">
            <summary>
            Gets the value associated with the specified key. 
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.</param>
            <returns>true if the object that implements IDictionary contains an element with the specified key; otherwise, false. </returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvTracks.Add(System.Collections.Generic.KeyValuePair{System.UInt32,OpenCvSharp.Blob.CvTrack})">
            <summary>
            Adds an item to the ICollection&lt;T&gt;.
            </summary>
            <param name="item">The object to add to the ICollection&lt;T&gt;.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvTracks.Clear">
            <summary>
            Removes all items from the ICollection&lt;T&gt;. 
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvTracks.Contains(System.Collections.Generic.KeyValuePair{System.UInt32,OpenCvSharp.Blob.CvTrack})">
            <summary>
            Determines whether the ICollection&lt;T&gt; contains a specific value. 
            </summary>
            <param name="item">The object to locate in the ICollection&lt;T&gt;.</param>
            <returns>true if item is found in the ICollection&lt;T&gt;; otherwise, false. </returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvTracks.CopyTo(System.Collections.Generic.KeyValuePair{System.UInt32,OpenCvSharp.Blob.CvTrack}[],System.Int32)">
            <summary>
            Copies the elements of the ICollection&lt;T&gt; to an Array, starting at a particular Array index.
            </summary>
            <param name="ary">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="aryIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvTracks.Remove(System.Collections.Generic.KeyValuePair{System.UInt32,OpenCvSharp.Blob.CvTrack})">
            <summary>
            Removes the first occurrence of a specific object from the ICollection&lt;T&gt;. 
            </summary>
            <param name="item">The object to remove from the ICollection&lt;T&gt;.</param>
            <returns>true if item was successfully removed from the ICollection&lt;T&gt;; otherwise, false. 
            This method also returns false if item is not found in the original ICollection&lt;T&gt;. </returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvTracks.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection. 
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvTracks.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection. 
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvTracks.Keys">
            <summary>
            Gets an ICollection&lt;T&gt; containing the keys of the IDictionary&lt;TKey,TValue&gt;.
            </summary>
            <returns>An ICollection&lt;T&gt; containing the keys of the IDictionary&lt;TKey,TValue&gt;.</returns>
        </member>
        <member name="P:OpenCvSharp.Blob.CvTracks.Values">
            <summary>
            Gets an ICollection&lt;T&gt; containing the values in the IDictionary&lt;TKey,TValue&gt;.
            </summary>
            <returns>An ICollection&lt;T&gt; containing the values in the IDictionary&lt;TKey,TValue&gt;.</returns>
        </member>
        <member name="P:OpenCvSharp.Blob.CvTracks.Item(System.UInt32)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="key">The key of the value to get or set.</param>
            <returns>The value associated with the specified key. If the specified key is not found, a get operation throws a KeyNotFoundException, and a set operation creates a new element with the specified key.</returns>
        </member>
        <member name="P:OpenCvSharp.Blob.CvTracks.Count">
            <summary>
            Gets the number of elements contained in the ICollection;T&gt;.
            </summary>
            <returns>The number of elements contained in the ICollection;T&gt;..</returns>
        </member>
        <member name="P:OpenCvSharp.Blob.CvTracks.IsReadOnly">
            <summary>
            Gets a value indicating whether the ICollection&lt;T&gt; is read-only.
            </summary>
            <returns>true if the ICollection&lt;T&gt; is read-only; otherwise, false. 
            In the default implementation of Collection&lt;T&gt;, this property always returns false.</returns>
        </member>
        <member name="T:OpenCvSharp.Blob.CvContoursChainCode">
            <summary>
            List of contours (chain codes type)
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContoursChainCode.#ctor(System.IntPtr)">
            <summary>
            Initializes from pointer
            </summary>
            <param name="ptr">CvContoursChainCode*</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContoursChainCode.FromPtr(System.IntPtr)">
            <summary>
            Initializes from pointer
            </summary>
            <param name="ptr">CvContoursChainCode*</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContoursChainCode.Add(OpenCvSharp.Blob.CvContourChainCode)">
            <summary>
            Adds an item to the collection.
            </summary>
            <param name="item">The object to add to the collection.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContoursChainCode.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContoursChainCode.Contains(OpenCvSharp.Blob.CvContourChainCode)">
            <summary>
            Determines whether the collection contains a specific value.
            </summary>
            <param name="item">The object to locate in the collection.</param>
            <returns> true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContoursChainCode.CopyTo(OpenCvSharp.Blob.CvContourChainCode[],System.Int32)">
            <summary>
            Copies the elements of the collection to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from collection. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContoursChainCode.Remove(OpenCvSharp.Blob.CvContourChainCode)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="item">The object to remove from the collection.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContoursChainCode.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection. 
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContoursChainCode.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection. 
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvContoursChainCode.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvContoursChainCode.IsReadOnly">
            <summary>
            Gets a value indicating whether the collectio is read-only.
            </summary>
        </member>
        <member name="T:OpenCvSharp.Blob.CvChainCode">
            <summary>
            Chain code (direction)
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvChainCode.Up">
            <summary>
            Up.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvChainCode.UpRight">
            <summary>
            Up and right.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvChainCode.Right">
            <summary>
            Right.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvChainCode.DownRight">
            <summary>
            Down and right.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvChainCode.Down">
            <summary>
            Down.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvChainCode.DownLeft">
            <summary>
            Down and left.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvChainCode.Left">
            <summary>
            Left.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvChainCode.UpLeft">
            <summary>
            Up and left.
            </summary>
        </member>
        <member name="T:OpenCvSharp.Blob.CvContourChainCode">
            <summary>
            Chain code contour.
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourChainCode.#ctor(System.IntPtr)">
            <summary>
            Initializes from pointer
            </summary>
            <param name="ptr">struct CvContourChainCode*</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourChainCode.FromPtr(System.IntPtr)">
            <summary>
            Initializes from pointer
            </summary>
            <param name="ptr">struct CvContourChainCode*</param>
        </member>
        <member name="F:OpenCvSharp.Blob.CvContourChainCode.SizeOf">
            <summary>
            sizeof(CvContourChainCode) 
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourChainCode.RenderContourChainCode(OpenCvSharp.IplImage)">
            <summary>
            Draw a contour.
            </summary>
            <param name="img">Image to draw on.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourChainCode.RenderContourChainCode(OpenCvSharp.IplImage,OpenCvSharp.CvScalar)">
            <summary>
            Draw a contour.
            </summary>
            <param name="img">Image to draw on.</param>
            <param name="color">Color to draw (default, white).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourChainCode.ConvertChainCodesToPolygon">
            <summary>
            Convert a chain code contour to a polygon.
            </summary>
            <returns>A polygon.</returns>
        </member>
        <member name="P:OpenCvSharp.Blob.CvContourChainCode.StartingPoint">
            <summary>
            Point where contour begin.
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvContourChainCode.ChainCode">
            <summary>
            Polygon description based on chain codes.
            </summary>
        </member>
        <member name="T:OpenCvSharp.Blob.CvBlobs">
            <summary>
            List of blobs.
            A map is used to access each blob from its label number.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobs.SizeOf">
            <summary>
            sizeof(CvBlobs)
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlobs._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.#ctor(OpenCvSharp.IplImage,OpenCvSharp.IplImage)">
            <summary>
            Constructor (init and cvLabel)
            </summary>
            <param name="img">Input binary image (depth=IPL_DEPTH_8U and num. channels=1).</param>
            <param name="imgOut">Output image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.Label(OpenCvSharp.IplImage,OpenCvSharp.IplImage)">
            <summary>
            Label the connected parts of a binary image. (cvLabel)
            </summary>
            <param name="img">Input binary image (depth=IPL_DEPTH_8U and num. channels=1).</param>
            <param name="imgOut">Output image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <returns>Number of pixels that has been labeled.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.FilterLabels(OpenCvSharp.IplImage,OpenCvSharp.IplImage)">
            <summary>
            Draw a binary image with the blobs that have been given. (cvFilterLabels)
            </summary>
            <param name="imgIn">Input image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="imgOut">Output binary image (depth=IPL_DEPTH_8U and num. channels=1).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.GreaterBlob">
            <summary>
            Find greater blob. (cvGreaterBlob)
            </summary>
            <returns>Label of greater blob.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.Release">
            <summary>
            Clear blobs structure. (cvReleaseBlobs)
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.RenderBlobs(OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.IplImage)">
            <summary>
            Draws or prints information about blobs. (cvRenderBlobs)
            </summary>
            <param name="imgLabel">Label image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.RenderBlobs(OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.Blob.RenderBlobsMode)">
            <summary>
            Draws or prints information about blobs. (cvRenderBlobs)
            </summary>
            <param name="imgLabel">Label image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="mode">Render mode. By default is CV_BLOB_RENDER_COLOR|CV_BLOB_RENDER_CENTROID|CV_BLOB_RENDER_BOUNDING_BOX|CV_BLOB_RENDER_ANGLE.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.RenderBlobs(OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.IplImage,OpenCvSharp.Blob.RenderBlobsMode,System.Double)">
            <summary>
            Draws or prints information about blobs. (cvRenderBlobs)
            </summary>
            <param name="imgLabel">Label image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
            <param name="imgSource">Input image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="imgDest">Output image (depth=IPL_DEPTH_8U and num. channels=3).</param>
            <param name="mode">Render mode. By default is CV_BLOB_RENDER_COLOR|CV_BLOB_RENDER_CENTROID|CV_BLOB_RENDER_BOUNDING_BOX|CV_BLOB_RENDER_ANGLE.</param>
            <param name="alpha">If mode CV_BLOB_RENDER_COLOR is used. 1.0 indicates opaque and 0.0 translucent (1.0 by default).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.FilterByArea(System.UInt32,System.UInt32)">
            <summary>
            Filter blobs by area. 
            Those blobs whose areas are not in range will be erased from the input list of blobs. (cvFilterByArea)
            </summary>
            <param name="minArea">Minimun area.</param>
            <param name="maxArea">Maximun area.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.Add(System.UInt32,OpenCvSharp.Blob.CvBlob)">
            <summary>
            Adds the specified key and value to the dictionary.
            </summary>
            <param name="key">The object to use as the key.</param>
            <param name="value">The object to use as the value.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.ContainsKey(System.UInt32)">
            <summary>
            Determines whether the IDictionary contains an element with the specified key. 
            </summary>
            <param name="key">The key to locate in the IDictionary&lt;TKey,TValue&gt;.</param>
            <returns>true if the IDictionary&lt;TKey,TValue&gt; contains an element with the key; otherwise, false. </returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.Remove(System.UInt32)">
            <summary>
            Removes the element with the specified key from the IDictionary&lt;TKey,TValue&gt;.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns> true if the element is successfully found and removed; otherwise, false. This method returns false if key is not found in the IDictionary&lt;TKey, TValue&gt;.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.TryGetValue(System.UInt32,OpenCvSharp.Blob.CvBlob@)">
            <summary>
            Gets the value associated with the specified key. 
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.</param>
            <returns>true if the object that implements IDictionary contains an element with the specified key; otherwise, false. </returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.Add(System.Collections.Generic.KeyValuePair{System.UInt32,OpenCvSharp.Blob.CvBlob})">
            <summary>
            Adds an item to the ICollection&lt;T&gt;.
            </summary>
            <param name="item">The object to add to the ICollection&lt;T&gt;.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.Clear">
            <summary>
            Removes all items from the ICollection&lt;T&gt;. 
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.Contains(System.Collections.Generic.KeyValuePair{System.UInt32,OpenCvSharp.Blob.CvBlob})">
            <summary>
            Determines whether the ICollection&lt;T&gt; contains a specific value. 
            </summary>
            <param name="item">The object to locate in the ICollection&lt;T&gt;.</param>
            <returns>true if item is found in the ICollection&lt;T&gt;; otherwise, false. </returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.CopyTo(System.Collections.Generic.KeyValuePair{System.UInt32,OpenCvSharp.Blob.CvBlob}[],System.Int32)">
            <summary>
            Copies the elements of the ICollection&lt;T&gt; to an Array, starting at a particular Array index.
            </summary>
            <param name="ary">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="aryIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.Remove(System.Collections.Generic.KeyValuePair{System.UInt32,OpenCvSharp.Blob.CvBlob})">
            <summary>
            Removes the first occurrence of a specific object from the ICollection&lt;T&gt;. 
            </summary>
            <param name="item">The object to remove from the ICollection&lt;T&gt;.</param>
            <returns>true if item was successfully removed from the ICollection&lt;T&gt;; otherwise, false. 
            This method also returns false if item is not found in the original ICollection&lt;T&gt;. </returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection. 
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlobs.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection. 
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlobs.Keys">
            <summary>
            Gets an ICollection&lt;T&gt; containing the keys of the IDictionary&lt;TKey,TValue&gt;.
            </summary>
            <returns>An ICollection&lt;T&gt; containing the keys of the IDictionary&lt;TKey,TValue&gt;.</returns>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlobs.Values">
            <summary>
            Gets an ICollection&lt;T&gt; containing the values in the IDictionary&lt;TKey,TValue&gt;.
            </summary>
            <returns>An ICollection&lt;T&gt; containing the values in the IDictionary&lt;TKey,TValue&gt;.</returns>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlobs.Item(System.UInt32)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="key">The key of the value to get or set.</param>
            <returns>The value associated with the specified key. If the specified key is not found, a get operation throws a KeyNotFoundException, and a set operation creates a new element with the specified key.</returns>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlobs.Count">
            <summary>
            Gets the number of elements contained in the ICollection&lt;T&gt;.
            </summary>
            <returns>The number of elements contained in the ICollection&lt;T&gt;.</returns>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlobs.IsReadOnly">
            <summary>
            Gets a value indicating whether the ICollection&lt;T&gt; is read-only.
            </summary>
            <returns>true if the ICollection&lt;T&gt; is read-only; otherwise, false. 
            In the default implementation of Collection&lt;T&gt;, this property always returns false.</returns>
        </member>
        <member name="F:OpenCvSharp.Blob.WCvTrack.id">
            <summary>
            Track identification number.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.WCvTrack.label">
            <summary>
            Label assigned to the blob related to this track.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.WCvTrack.minx">
            <summary>
            X min.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.WCvTrack.maxx">
            <summary>
            X max.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.WCvTrack.miny">
            <summary>
            Y min.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.WCvTrack.maxy">
            <summary>
            Y max.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.WCvTrack.centroid">
            <summary>
            Centroid.
            </summary>
        </member>
        <member name="F:OpenCvSharp.Blob.WCvTrack.inactive">
            <summary>
            Indicates number of frames that has been missing.
            </summary>
        </member>
        <member name="T:OpenCvSharp.Blob.CvTrack">
            <summary>
            Struct that contain information about one track.
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvTrack.#ctor(System.IntPtr)">
            <summary>
            Default constructor
            </summary>
            <param name="ptr">struct CvTrack*</param>
        </member>
        <member name="F:OpenCvSharp.Blob.CvTrack.SizeOf">
            <summary>
            sizeof(CvTrack)
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvTrack.Release">
            <summary>
            Clean up any resources being used (delete track).
            Usually users should not explicitly call this method.
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvTrack.IsDisposed">
            <summary>
            Gets a value indicating whether this instance has been disposed.
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvTrack.ID">
            <summary>
            Track identification number.
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvTrack.Label">
            <summary>
            Label assigned to the blob
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvTrack.MinX">
            <summary>
            X min
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvTrack.MaxX">
            <summary>
            X max
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvTrack.MinY">
            <summary>
            Y min
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvTrack.MaxY">
            <summary>
            Y max
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvTrack.Centroid">
            <summary>
            Centroid
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvTrack.Inactive">
            <summary>
            Indicates number of frames that has been missing.
            </summary>
        </member>
        <member name="T:OpenCvSharp.Blob.CvBlob">
            <summary>
            Struct that contain information about one blob.
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlob.#ctor(System.IntPtr)">
            <summary>
            Default constructor
            </summary>
            <param name="ptr">struct CvBlob*</param>
        </member>
        <member name="F:OpenCvSharp.Blob.CvBlob.SizeOf">
            <summary>
            sizeof(CvBlob)
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlob.CalcCentroid">
            <summary>
            Calculates centroid.
            Centroid will be returned and stored in the blob structure. (cvCentroid)
            </summary>
            <returns>Centroid.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlob.CalcCentralMoments(OpenCvSharp.IplImage)">
            <summary>
            Calculates central moment for a blob.
            Central moments will be stored in blob structure. (cvCentralMoments)
            </summary>
            <param name="img">Label image (depth=IPL_DEPTH_LABEL and num. channels=1).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlob.CalcAngle">
            <summary>
            Calculates angle orientation of a blob.
            This function uses central moments so cvCentralMoments should have been called before for this blob. (cvAngle)
            </summary>
            <returns>Angle orientation in radians.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlob.Release">
            <summary>
            Clean up any resources being used (cvReleaseBlob).
            Usually users should not explicitly call this method.
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvBlob.SetImageROItoBlob(OpenCvSharp.IplImage)">
            <summary>
            Set the ROI of an image to the bounding box of a blob.
            </summary>
            <param name="img">Image.</param>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.IsDisposed">
            <summary>
            Gets a value indicating whether this instance has been disposed.
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.Label">
            <summary>
            Label assigned to the blob
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.Area">
            <summary>
            Area (moment 00)
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.M00">
            <summary>
            Area (moment 00)
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.MinX">
            <summary>
            X min
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.MaxX">
            <summary>
            X max
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.MinY">
            <summary>
            Y min
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.MaxY">
            <summary>
            Y max
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.Rect">
            <summary>
            CvRect(MinX, MinY, MaxX - MinX, MaxY - MinY)
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.Centroid">
            <summary>
            Centroid
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.M10">
            <summary>
            Moment 10
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.M01">
            <summary>
            Moment 01
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.M11">
            <summary>
            Moment 11
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.M20">
            <summary>
            Moment 20
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.M02">
            <summary>
            Moment 02
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.CentralMoments">
            <summary>
            True if central moments are being calculated
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.U11">
            <summary>
            Central moment 11
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.U20">
            <summary>
            Central moment 20
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.U02">
            <summary>
            Central moment 02
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.Contour">
            <summary>
            Contour
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvBlob.InternalContours">
            <summary>
            Internal contours
            </summary>
        </member>
        <member name="T:OpenCvSharp.Blob.CvContourPolygon">
            <summary>
            Polygon based contour.
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourPolygon.#ctor(System.IntPtr)">
            <summary>
            Initializes from pointer
            </summary>
            <param name="ptr">CvContourPolygon*</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourPolygon.FromPtr(System.IntPtr)">
            <summary>
            Initializes from pointer
            </summary>
            <param name="ptr">CvContourPolygon*</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourPolygon.ContourPolygonArea">
            <summary>
            Calculates area of a polygonal contour. 
            </summary>
            <returns>Area of the contour.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourPolygon.ContourPolygonPerimeter">
            <summary>
            Calculates perimeter of a polygonal contour.
            </summary>
            <returns>Perimeter of the contour.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourPolygon.PolygonContourConvexHull">
            <summary>
            Calculates convex hull of a contour.
            Uses the Melkman Algorithm. Code based on the version in http://w3.impa.br/~rdcastan/Cgeometry/.
            </summary>
            <returns>Convex hull.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourPolygon.RenderContourPolygon(OpenCvSharp.IplImage)">
            <summary>
            Draw a polygon.
            </summary>
            <param name="img">Image to draw on.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourPolygon.RenderContourPolygon(OpenCvSharp.IplImage,OpenCvSharp.CvScalar)">
            <summary>
            Draw a polygon.
            </summary>
            <param name="img">Image to draw on.</param>
            <param name="color">Color to draw (default, white).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourPolygon.SimplifyPolygon">
            <summary>
            Simplify a polygon reducing the number of vertex according the distance "delta". 
            Uses a version of the Ramer-Douglas-Peucker algorithm (http://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm). 
            </summary>
            <returns>A simplify version of the original polygon.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourPolygon.SimplifyPolygon(System.Double)">
            <summary>
            Simplify a polygon reducing the number of vertex according the distance "delta". 
            Uses a version of the Ramer-Douglas-Peucker algorithm (http://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm). 
            </summary>
            <param name="delta">Minimun distance.</param>
            <returns>A simplify version of the original polygon.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourPolygon.WriteContourPolygonCSV(System.String)">
            <summary>
            Write a contour to a CSV (Comma-separated values) file.
            </summary>
            <param name="filename">File name.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourPolygon.WriteContourPolygonSVG(System.String)">
            <summary>
            Write a contour to a SVG file.
            </summary>
            <param name="filename">File name.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourPolygon.WriteContourPolygonSVG(System.String,OpenCvSharp.CvScalar,OpenCvSharp.CvScalar)">
            <summary>
            Write a contour to a SVG file.
            </summary>
            <param name="filename">File name.</param>
            <param name="stroke">Stroke color (black by default).</param>
            <param name="fill">Fill color (white by default).</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourPolygon.Add(OpenCvSharp.CvPoint)">
            <summary>
            Adds an item to the collection.
            </summary>
            <param name="item">The object to add to the collection.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourPolygon.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourPolygon.Contains(OpenCvSharp.CvPoint)">
            <summary>
            Determines whether the collection contains a specific value.
            </summary>
            <param name="item">The object to locate in the collection.</param>
            <returns> true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourPolygon.CopyTo(OpenCvSharp.CvPoint[],System.Int32)">
            <summary>
            Copies the elements of the collection to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from collection. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourPolygon.Remove(OpenCvSharp.CvPoint)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="item">The object to remove from the collection.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourPolygon.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection. 
            </summary>
        </member>
        <member name="M:OpenCvSharp.Blob.CvContourPolygon.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection. 
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvContourPolygon.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
        </member>
        <member name="P:OpenCvSharp.Blob.CvContourPolygon.IsReadOnly">
            <summary>
            Gets a value indicating whether the collectio is read-only.
            </summary>
        </member>
    </members>
</doc>
